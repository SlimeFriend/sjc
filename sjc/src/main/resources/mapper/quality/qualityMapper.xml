<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjc.app.quality.mapper.QualityMapper">
	<!-- 입고품질검사 검색기능 -->
	<select id="searchMO" resultType="InspectionVO">
		SELECT  mo.mtl_od_code
		        , mo.mtl_od_date
		        , mo.mtl_od_status
		        , mo.cp_code
		        , c.cp_name
		FROM    mtl_od mo
		LEFT JOIN cp c ON mo.cp_code = c.cp_code
		WHERE 1=1
		AND mo.mtl_od_status = '입고품질검사대기'
		<if test="cpCode != null and cpCode != ''">
	        AND mo.cp_code LIKE '%' || #{cpCode} || '%'
	    </if>
        <if test="cpName != null and cpName != ''">
	        AND c.cp_name LIKE '%' || #{cpName} || '%'
	    </if>
	    <if test="moStartDate != null and moStartDate != ''">
	        AND mo.mtl_od_date <![CDATA[>=]]> TO_DATE(#{moStartDate}, 'YYYY-MM-DD')
	    </if>
	    <if test="moEndDate != null and moEndDate != ''">
	        AND mo.mtl_od_date <![CDATA[<=]]> TO_DATE(#{moEndDate}, 'YYYY-MM-DD') + 1
	    </if>
    	ORDER BY mo.mtl_od_date DESC
	</select>
	
	<!-- 입고품질검사 대기목록 1 (mtlOd)-->
	<select id="selectMtlOd" resultType="InspectionVO">
		SELECT
				DISTINCT(o.mtl_od_code) AS mtl_od_code,
				o.cp_code AS cp_code,
				c.cp_name AS cp_name,
				sum(od.quantity) AS mtl_od_quantity,
				o.mtl_od_date AS mtl_od_date,
				o.dilivery_date AS dilivery_date,
				(SELECT SUM(COALESCE(m.UNIT_PRICE, 0) * COALESCE(od.QUANTITY, 0))
					FROM MTL_OD_DETAIL od
					LEFT JOIN MT m 
					ON od.MT_CODE = m.MT_CODE
					WHERE od.MTL_OD_CODE = o.MTL_OD_CODE)
					 AS price,
				o.user_id AS user_id,
				o.mtl_od_status AS mtl_od_status,
				o.comm AS comm
		FROM mtl_od o
			JOIN cp c 
			ON o.cp_code = c.cp_code
			JOIN mtl_od_detail od 
			ON od.mtl_od_code = o.mtl_od_code
		WHERE o.mtl_od_status = '입고품질검사대기' -- 완료
			OR (
					o.mtl_od_status = '입고품질검사중'
						AND 
					od.MTL_OD_DETAIL_STATUS IS NULL
				)
			OR (
					o.mtl_od_status = '입고품질검사중'
						AND 
					od.MTL_OD_DETAIL_STATUS = '개별입고품질검사중'
				)
		GROUP BY ROLLUP ((o.mtl_od_code 
							, o.cp_code
							, c.cp_name
							, o.mtl_od_date
							, o.dilivery_date
							, o.price
							, o.user_id
							, o.mtl_od_status
							, o.comm
						))
		HAVING o.mtl_od_code IS NOT NULL
		ORDER BY o.mtl_od_date DESC
	</select>
	
	<!-- 입고품질검사 대기목록 2 (mtlOdDetail) -->
	<select id="selectMtlOdDetail" parameterType="String" resultType="map">
	    SELECT 	d.mtl_od_code  			AS "mtlOdCode"
	        	, d.mtl_od_detail_code 	AS "mtlOdDetailCode"
	        	, d.mt_code 			AS "mtCode"
	        	, d.quantity 			AS "mtlOdDetailQuantity"
	        	, m.mt_name 			AS "mtName"
	        	, m.material_type 		AS "materialType"
	        	, m.specification 		AS "specification"
	        	, m.unit 				AS "unit"
	        	, m.unit_price 			AS "unitPrice"
		FROM 	mtl_od_detail d
			JOIN 	mt m
			ON 		d.mt_code = m.mt_code
		WHERE 	d.mtl_od_code = #{mtlOdCode}
		and 	d.mtl_od_detail_status is null
		OR (		d.mtl_od_code = #{mtlOdCode}
						AND
					d.mtl_od_detail_status = '개별입고품질검사중'
				)
	</select>
	

	
<!-- Update Status (mtlOd, mtlOdDetail) -->
	<update id="updateMtlOdStatus">
		UPDATE mtl_od
		SET mtl_od_status = '입고품질검사중'
		WHERE mtl_od_code = (SELECT mtl_od_code
							 FROM mtl_od_detail
							 WHERE mtl_od_detail_code = #{mtlOdDetailCode}
							)
	</update>
	

	<update id="updateMtlOdDetailStatus">
		UPDATE mtl_od_detail
		SET mtl_od_detail_status = '개별입고품질검사중'
		WHERE mtl_od_detail_code = #{mtlOdDetailCode}
	</update>

	
	
	
<!--자재 Inspection insert 여부 조회 (mtl_od_detail_code) -->
	<select id="whetherInspection" resultType="Integer">
		SELECT count(1)
		FROM inspection
		WHERE mtl_od_detail_code = #{mtlOdDetailCode}
	</select>

	
<!--자재 insert Inspection  -->
	<insert id="insertInspection" parameterType="InspectionVO">
	    <selectKey keyProperty="insCode" order="BEFORE" resultType="string">
	        SELECT 'INS' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(INS_SEQ.NEXTVAL, 4, '0') 
	        FROM dual
	    </selectKey>
	    INSERT INTO inspection (
		        ins_code
		        , ins_date
		        , ins_status
		        , mtl_od_detail_code
		    )
		    VALUES ( 
		    		#{insCode}
		        	, SYSDATE
		        	, '검사중'
		        	, #{mtlOdDetailCode}
		    )
	</insert>
	

<!-- 자재품질검사등록모달-inspection 데이터 출력 -->
	<select id="selectInspection" resultType="InspectionVO">
			SELECT i.ins_code 					AS "insCode"
			        , i.ins_date 				AS "insDate"
			        , i.ins_status 				AS "insStatus"
			        , i.user_id 				AS "userId"
			        , i.user_name 				AS "userName"
			        , i.number_of_tests 		AS "numberOfTests"
			        , i.number_of_passes 		AS "numberOfPasses"
			        , i.number_of_failed 		AS "numberOfFailed"
			        , i.number_of_total_pass 	AS "numberOfTotalPass"
			        , i.total_pass 				AS "totalPass"
			        , i.mtl_od_detail_code 		AS "mtlOdDetailCode"
			        , mod.quantity 				AS "mtlOdDetailQuantity"
			 FROM 	inspection i
			 JOIN	mtl_od_detail mod
			 ON		mod.mtl_od_detail_code = i.mtl_od_detail_code
	         WHERE i.mtl_od_detail_code = #{mtlOdDetailCode}
	</select>

	

	
	
	<!-- 자재 insDetail insert 여부 조회 (mtl_od_detail_code)  -->
	<select id="countInsItem" resultType="Integer">
		SELECT count(1)
		FROM ins_detail d
		JOIN inspection i
		ON	i.ins_code = d.ins_code
        JOIN mtl_od_detail mod
        ON  i.mtl_od_detail_code = mod.mtl_od_detail_code
		WHERE i.mtl_od_detail_code =  #{mtlOdDetailCode}
	</select>

	

<!-- 자재입고품질검사모달창 insItem 목록 출력 -->
	<select id="selectTestDetail" resultType="InspectionVO">
		SELECT  im.mt_code mt_code
        		,ii.ins_item_code ins_item_code
        		,ii.ins_item_name ins_item_name
        		,ii.ins_item_citeria ins_item_citeria
		FROM    ins_map im
		JOIN    ins_item ii
		ON      im.ins_item_code = ii.ins_item_code
		WHERE   im.mt_code = (
					    		select  mt_code
					    		from    mtl_od_detail
					    		where   MTL_OD_DETAIL_CODE = #{mtlOdDetailCode}
							 )
	</select>
	<!-- 자재,완제품 insDetail insert -->
	<insert id="insertInsDetail" parameterType="InspectionVO">
	    <selectKey keyProperty="insDetailCode" order="BEFORE" resultType="string">
	        SELECT 'INSD' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(INS_DETAIL_SEQ.NEXTVAL, 4, '0') 
	        FROM dual
	    </selectKey>
	
	    INSERT INTO ins_detail 
		                ( ins_detail_code
		                	, ins_code
		                )
		VALUES          ( #{insDetailCode}
		                	, #{insCode}
		                )
	</insert>

	<!-- 자재입고품질검사모달창, 완제품품질검사모달창 insDetail 목록 출력 -->
	<select id="selectInsDetailList" resultType="InspectionVO">
		SELECT ins_detail_code	AS "insDetailCode"
				, ins_code		AS "insCode"
				, ins_value		AS "insValue"
				, ins_result 	AS "insResult"
		FROM	ins_detail
		WHERE	ins_code = #{insCode}
	</select>

	
	
	<!-- insDetail 값 입력 -->
	<update id="updateInsValue">
		UPDATE 	ins_detail
		SET   	ins_value = #{insValue}
				, ins_result = #{insResult}
				, ins_item_code = #{insItemCode}
		WHERE 	ins_detail_code = #{insDetailCode}
	</update>
	<!-- 입고검사 최종등록(Update) -->
	<update id="updateIns">
		UPDATE	inspection
		SET		ins_status = '검사완료'
				, user_id = #{userId}
				, user_name = #{userName}
				, number_of_tests = #{numberOfTests}
			    , number_of_passes = #{numberOfPasses}
			    , number_of_failed = #{numberOfFailed}
			    , total_pass = #{totalPass}
			    , number_of_total_pass = #{numberOfTotalPass}
		WHERE 	ins_code = #{insCode}
	</update>
	
	
	
<!--  // 자재품질검사모달창 - mtl_od.mtl_od_status 입고품질검사완료 -->
	<update id="updateMtlOdSt" parameterType="InspectionVO">
		UPDATE mtl_od
		SET mtl_od_status = '입고품질검사완료'
		WHERE mtl_od_code = ( SELECT mtl_od_code
							  FROM mtl_od_detail
							  WHERE mtl_od_detail_code = #{mtlOdDetailCode})
	</update>
<!--  // 자재품질검사모달창 - mtl_od_detail.mtl_od_detail_status 개별입고품질검사완료 -->
	<update id="updateMtlOdDetailSt" parameterType="InspectionVO">
		UPDATE mtl_od_detail
		SET mtl_od_detail_status = '개별입고품질검사완료'
		WHERE mtl_od_detail_code = #{mtlOdDetailCode}
	</update>
	
	
	
	<select id="selectInsDetail" resultType="InspectionVO">
			SELECT 	ins_detail_code
		            , ins_item_code
		            , ins_value
		            , ins_result
		            , ins_code
			FROM 	ins_detail
	        WHERE 	ins_code = #{insCode}
	</select>
		

	
	
	
	
	
	
	
	<select id="selectTest" resultType="InspectionVO">
		SELECT 	i.ins_item_name
		        , i.ins_item_citeria
		        , i.ins_item_code
		FROM 	ins_item i
		JOIN 	ins_map m
		ON 		m.ins_item_code = i.ins_item_code
		WHERE 	m.mt_code = #{mtCode}
	</select>
	
	



	<!-- 완료목록페이지 -->
	<!-- 입고 -->
	<select id="selectQualityDoneInfo" resultType="InspectionVO">
		SELECT 		i.ins_date					AS "insDate"
		        	, i.ins_code				AS "insCode"
		        	, i.ins_status				AS "insStatus"
		        	, cmo.mtl_od_status			AS "mtlOdStatus"
		        	, cmod.mtl_od_detail_status	AS "mtlOdDetailStatus"
		        	, cm.mt_name				AS "mtName"
		        	, cm.specification			AS "specification"
		        	, i.number_of_tests			AS "numberOfTests"
		        	, i.number_of_passes		AS "numberOfPasses"
		        	, i.number_of_total_pass	AS "numberOfTotalPass"
		        	, i.total_pass				AS "totalPass"
		        	, cmo.mtl_od_code			AS "mtlOdCode"
		        	, cmod.mtl_od_detail_code	AS "mtlOdDetailCode"
		        	, cm.mt_code				AS "mtCode"
		        	, i.user_id					AS "userId"
		        	, cmo.cp_code				AS "cpCode"
		FROM    	mt cm
			JOIN    mtl_od_detail cmod
			ON      cmod.mt_code = cm.mt_code
        	JOIN    mtl_od cmo
        	ON      cmo.mtl_od_code = cmod.mtl_od_code
			JOIN    inspection i
			ON      cmod.mtl_od_detail_code = i.mtl_od_detail_code
		WHERE   	i.ins_status = '검사완료'
		        	and cmo.mtl_od_status = '입고품질검사완료'
		        	--and cmo.mtl_od_status not in ('반품', '입고완료')
		        	and cmo.mtl_od_status not in ('입고완료')
		ORDER BY 	i.ins_date DESC
	</select>
	
<!--  // 입고검사완료페이지 - 입고처리 버튼 - mtl_od.mtl_od_status 입고완료 -->
	<update id="updateMtlOdDone" parameterType="InspectionVO">
		UPDATE mtl_od
		SET mtl_od_status = '입고완료'
		WHERE mtl_od_code = #{mtlOdCode}
	</update>
	
	<insert id="insertMtInInfo" parameterType="InspectionVO">
	    <selectKey keyProperty="inCode" order="BEFORE" resultType="string">
	        SELECT 'IN' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(MT_IN_SEQ.NEXTVAL, 4, '0') 
	        FROM dual
	    </selectKey>
		    INSERT INTO mt_in (
						        input_date,
						        inquantity, 
						        ed, 
						        in_code, 
						        user_id, 
						        mtl_od_code, 
						        ins_code, 
						        mt_code, 
						        cp_code, 
						        comm, 
						        lot_no
						    )
		    VALUES 			(
						        SYSDATE,
						        #{numberOfTotalPass},
						        ADD_MONTHS(SYSDATE, 6),
						        #{inCode},
						        #{userId},
						        #{mtlOdCode},
						        #{insCode},
						        #{mtCode},
						        #{cpCode},
						        #{mtInComm},
						        'L' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(MT_IN_SEQ.CURRVAL, 4, '0')
						    )
	</insert>
	
	
	
	



	


<!--   // 입고등록페이지 - 저장버튼 - inspection.ins_status 검사완료 -->
	<update id="updateInspectionDone" parameterType="InspectionVO">
		UPDATE inspection
		SET ins_status = '검사완료'
		WHERE mtl_od_code = #{mtlOdCode}
	</update>



<!--  // 입고검사완료페이지 - 반품처리 버튼 - mtl_od.mtl_od_status 반품 -->
	<update id="updateMtlOdBack" parameterType="InspectionVO">
		UPDATE mtl_od
		--SET mtl_od_status = '반품'
		SET mtl_od_status = '입고완료'
		WHERE mtl_od_code = ( SELECT mtl_od_code
                                FROM  mtl_od_detail
                                WHERE mtl_od_detail_code = ( SELECT mtl_od_detail_code
                                                             FROM   inspection
                                                             WHERE ins_code =  #{insCode}
                                                             )
                                )
	</update>
	
	
	<!-- 자재입고테이블 -->

	<select id="selectMtIn" resultType="InspectionVO">
		SELECT  i.number_of_passes
	        , i.user_id
	        , i.ins_code
	        , o.mtl_od_code
	        , cmod.mt_code
	        , o.cp_code
		FROM inspection i
		JOIN mtl_od_detail cmod
		ON   cmod.mtl_od_detail_code = i.mtl_od_detail_code
		JOIN mtl_od o
		    on cmod.mtl_od_code = o.mtl_od_code
		WHERE o.mtl_od_status = '입고완료'
	</select>
	
	




















	<!-- 완제품입고품질검사 검색기능 -->
	<select id="searchPrd" resultType="InspectionVO">
	SELECT po.porder_code AS "porderCode"
			, MAX(po.plan_code) AS "planCode"
			, FLOOR(SUM(pd.output)) AS "output"
			, MIN(pd.no) AS "pdetailNo"
			, MAX(u.user_name) AS "userName"
			, po.porder_date AS "porderDate"
	FROM porder po
		JOIN pdetail pd
		ON pd.porder_code = po.porder_code
		JOIN sjc_user u
		ON u.user_id = po.manager
	WHERE 1=1
	AND po.status = 'b3'
	<if test="poStartDate != null and poStartDate != ''">
            AND po.porder_date <![CDATA[>=]]> TO_DATE(#{poStartDate}, 'YYYY-MM-DD')
        </if>
        <if test="poEndDate != null and poEndDate != ''">
            AND po.porder_date <![CDATA[<=]]> TO_DATE(#{poEndDate}, 'YYYY-MM-DD') + 1
        </if>
    <if test="porderCode != null and porderCode != ''">
        AND po.porder_code LIKE '%' || #{porderCode} || '%'
    </if>
    <if test="userName != null and userName != ''">
        AND u.user_name LIKE '%' || #{userName} || '%'
    </if>
	GROUP BY po.porder_code
			, po.porder_date
	ORDER BY po.porder_date DESC
</select>


	<!-- 완제품품질검사 대기목록1 -->
	<select id="selectPOrder" resultType="InspectionVO">
		SELECT  po.porder_code          AS "porderCode"
		        , MAX(po.plan_code)     AS "planCode"
		        , FLOOR(SUM(pd.output)) AS "output"
		        , MIN(pd.no)            AS "pdetailNo"
		        , MAX(u.user_name)      AS "userName"
                , po.porder_date		AS "porderDate"
		FROM    porder po
			JOIN    pdetail pd
			ON      pd.porder_code = po.porder_code
			JOIN    sjc_user u
			ON      u.user_id = po.manager
		WHERE   po.status = 'b3'
			OR		(
        				po.status = '완제품품질검사중'
        					and     
        				pd.status = 'b3'
        			)
		GROUP BY po.porder_code
                , po.porder_date
        ORDER BY po.porder_date DESC
	</select>
	<!-- 완제품품질검사 대기목록2(porder_code) -->
	<select id="selectPDetail" parameterType="String" resultType="map">
		SELECT pd.pdetail_code 	AS "pdetailCode"
        		, po.porder_code AS "porderCode"
				, pd.prd_code 	AS "prdCode"
		        , pd.prd_name 	AS "prdName"
		        , pd.output 	AS "output"
				, pd.line_code 	AS "lineCode"
		        , pd.status 	AS "pdetailStatus"
		        , pd.no 		AS "pdetailNo"
		FROM pdetail pd
		JOIN porder po
		ON po.porder_code = pd.porder_code
		WHERE po.porder_code = #{porderCode}
		AND     pd.status = 'b3'
	</select>
<!-- Update Status (porder, pdetail) -->
	<update id="updatePOrderStatus">
		UPDATE porder
		SET status = '완제품품질검사중'
		WHERE porder_code = (SELECT porder_code
							 FROM pdetail
							 WHERE pdetail_code = #{pdetailCode}
							 )
	</update>
	
	<update id="updatePDetailStatus">
		UPDATE pdetail
		SET status = '개별완제품품질검사중'
		WHERE pdetail_code = #{pdetailCode}
	</update>

<!--완제품 Inspection insert 여부 조회 (pdetail_code) -->
	<select id="cntPDtlIns" resultType="Integer">
		SELECT count(1)
		FROM inspection
		WHERE pdetail_code = #{pdetailCode}
	</select>
	
	
<!--완제품 insert Inspection  -->
	<insert id="insertPDtlIns" parameterType="InspectionVO">
	    <selectKey keyProperty="insCode" order="BEFORE" resultType="string">
	        SELECT 'INS' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(INS_SEQ.NEXTVAL, 4, '0') 
	        FROM dual
	    </selectKey>
	    INSERT INTO inspection (
		        ins_code
		        , ins_date
		        , ins_status
		        , pdetail_code
		    )
		    VALUES ( 
		    		#{insCode}
		        	, SYSDATE
		        	, '검사중'
		        	, #{pdetailCode}
		    )
	</insert>
<!-- 완제품품질검사등록모달-inspection 데이터 출력 -->
	<select id="selectPDtlIns" resultType="InspectionVO">
			SELECT 	i.ins_code		  			AS "insCode"
			        , i.ins_date		  		AS "insDate"
			        , i.ins_status				AS "insStatus"
			        , i.user_id		  			AS "userId"
			        , i.user_name		  		AS "userName"
			        , i.number_of_tests			AS "numberOfTests"
			        , i.number_of_passes		AS "numberOfPasses"
			        , i.number_of_failed		AS "numberOfFailed"
			        , i.number_of_total_pass	AS "numberOfTotalPass"
			        , i.total_pass		  		AS "totalPass"
			        , i.pdetail_code		  	AS "pdetailCode"
			        , pd.output		  			AS "output"
			 FROM 	inspection i
			 JOIN	pdetail pd
			 ON		i.pdetail_code = pd.pdetail_code
	         WHERE 	i.pdetail_code = #{pdetailCode}
	</select>
	

	
	
	<!-- 완제품 insDetail  insert 여부 조회 (pdetail_code) -->
	<select id="countInsItem2" resultType="Integer">
		SELECT 	count(1)
		FROM 	ins_detail d
		JOIN 	inspection i
		ON		i.ins_code = d.ins_code
		JOIN	pdetail pd
		ON		i.pdetail_code = pd.pdetail_code
		WHERE 	i.pdetail_code =  #{pdetailCode}
	</select>
	

	<!-- 완제품품질검사모달창 insItem 목록 출력 -->
	<select id="selectPDtlTest" resultType="InspectionVO">
		SELECT  ipm.prd_code			AS "prdCode"
        		,ii.ins_item_code		AS "insItemCode"
        		,ii.ins_item_name		AS "insItemName"
        		,ii.ins_item_citeria	AS "insItemCiteria"
		FROM    ins_prd_map ipm
		JOIN    ins_item ii
		ON      ipm.ins_item_code = ii.ins_item_code
		WHERE   ipm.prd_code = (
					    SELECT  prd_code
					    FROM    pdetail
					    WHERE   pdetail_code = #{pdetailCode}
					)
	</select>


	
	
	

<!--  // 완제품품질검사모달창 - pdetail.status 개별완제품품질검사완료 -->
	<update id="updatePdSt" parameterType="InspectionVO">
		UPDATE pdetail
		SET status = '개별완제품품질검사완료'
		WHERE pdetail_code = #{pdetailCode}
	</update>
<!--  // 완제품품질검사모달창 - porder.status 완제품품질검사완료 -->
	<update id="updatePoSt" parameterType="InspectionVO">
		UPDATE porder
		SET status = '완제품품질검사완료'
		WHERE porder_code = ( SELECT porder_code
							  FROM	pdetail
							  WHERE pdetail_code=#{pdetailCode})
	</update>
	


		
		

	
	
	
	
	<select id="selectTest2" resultType="InspectionVO">
		SELECT i.ins_item_name
		        , i.ins_item_citeria
		        , i.ins_item_code
		FROM ins_item i
		JOIN ins_prd_map ipm
		ON ipm.ins_item_code = i.ins_item_code
		WHERE ipm.prd_code = #{prdCode}
	</select>



	




	<!-- 완제품품질검사 완료목록 1 -->
	<select id="selectOutDoneInfo1" resultType="PDetailVO">
		SELECT 	po.porder_code	    AS "porderCode"
                , po.status	        AS "porderStatus"
                , po.porder_date    AS "porderDate"
		        , po.start_date	    AS "startDate"
                , po.manager	    AS "manager"
		FROM    porder po
        JOIN    pdetail pd
        ON      po.porder_code = pd.porder_code
		JOIN    inspection i
		ON      i.pdetail_code = pd.pdetail_code
		WHERE   i.ins_status = '검사완료'
		        and po.status = '완제품품질검사완료'
		        --and po.status not in ('불량', '출고대기')
		        and po.status not in ('출고대기')
	</select>
	<!-- 완제품품질검사 완료목록 2 -->
<!-- 	<select id="selectOutDoneInfo2" resultType="InspectionVO">
		SELECT   i.ins_date			        AS "insDate"
		        , i.ins_status	            AS "insStatus"
                , i.number_of_tests 	    AS "numberOfTests"
		        , i.number_of_passes	    AS "numberOfPasses"
		        , i.number_of_total_pass    AS "numberOfTotalPass"
		        , i.total_pass	            AS "totalPass"
		        , i.user_id	                AS "userId"
                , i.ins_code	            AS "insCode"
                , p.prd_code	            AS "prdCode"
		        , p.prd_name	            AS "prdName"
		        , pd.pdetail_code	        AS "pdetailCode"
		        , pd.status	                AS "pdetailStatus"
                , pd.output	                AS "output"
                , pr.process_date           AS "processDate"
		FROM    prd p
		JOIN    pdetail pd
		ON      pd.prd_code = pd.prd_code
        JOIN    presult pr
        ON      pr.pdetail_code = pd.pdetail_code
        JOIN    porder po
        ON      po.porder_code = pd.porder_code
		JOIN    inspection i
		ON      i.pdetail_code = pd.pdetail_code
        WHERE     i.ins_status = '검사완료'
		AND     po.status = '완제품품질검사완료'
		AND     pd.status not in ('불량', '출고대기')
	</select>
 -->	
 <select id="selectOutDoneInfo2" resultType="InspectionVO">
		SELECT   i.ins_date			        AS "insDate"
		        , i.ins_status	            AS "insStatus"
                , i.number_of_tests 	    AS "numberOfTests"
		        , i.number_of_passes	    AS "numberOfPasses"
		        , i.number_of_total_pass    AS "numberOfTotalPass"
		        , i.total_pass	            AS "totalPass"
		        , i.user_id	                AS "userId"
                , i.ins_code	            AS "insCode"
                , p.prd_code	            AS "prdCode"
		        , p.prd_name	            AS "prdName"
		        , pd.pdetail_code	        AS "pdetailCode"
		        , pd.status	                AS "pdetailStatus"
                , pd.output	                AS "output"
                , po.start_date           	AS "startDate"

        FROM    prd p
        JOIN    pdetail pd
        ON      p.prd_code = pd.prd_code
        JOIN    porder po
        ON      pd.porder_code = po.porder_code
        JOIN    inspection i
        ON      pd.pdetail_code = i.pdetail_code
		WHERE   i.ins_status = '검사완료'
               AND     po.status = '완제품품질검사완료'
               --AND     pd.status not in ('불량', '출고대기')
               AND     pd.status not in ('출고대기')
        ORDER BY i.ins_date DESC
	</select>
	<!--  // 완제품품질검사완료페이지 - 입고처리 버튼 - pdetail.status 출고대기 -->
	<update id="updatePOrderDone" parameterType="InspectionVO">
		UPDATE pdetail
		SET status = '출고대기'
		WHERE pdetail_code = #{pdetailCode}
	</update>
<!--  // 완제품품질검사완료페이지 - 불량처리 버튼 - pdetail.status 반품 -->
	<update id="updatePdBack" parameterType="InspectionVO">
		UPDATE pdetail
		--SET status = '불량'
		SET status = '출고대기'
		WHERE pdetail_code = ( SELECT pdetail_code
                                FROM   inspection
                                WHERE ins_code =  #{insCode}
                              )
	</update>
	
	<insert id="insertPManage" parameterType="InspectionVO">
	    <selectKey keyProperty="lot" order="BEFORE" resultType="string">
	        SELECT 'PMG' || TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(PRD_MANAGEMENT_SEQ.NEXTVAL, 4, '0') 
	        FROM dual
	    </selectKey>
		    INSERT INTO prd_management (
						        lot,
						        prd_code, 
						        md,
						        ed, 
						        in_quantity,
						        --out_quantity,
						        ins_code,
						        in_date
						    )
		    VALUES 			(
						        
						        #{lot},
						        #{prdCode},
						        #{startDate},
						        ADD_MONTHS(SYSDATE, 6),
						        #{inQ},
						        --0,
						        #{insCode},
						        SYSDATE
						    )
	</insert>







<!--   // 완제품품질검사완료페이지 - 저장버튼 - inspection.ins_status 검사완료 -->
	<update id="updateInspectionDone2" parameterType="InspectionVO">
		UPDATE inspection
		SET ins_status = '검사완료'
		WHERE pdetail_code = #{pdetailCode}
	</update>

	
	
	









	


</mapper>