<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjc.app.eq.mapper.EqMapper">

	<!-- 전체조회 -->
<select id="selectEqAll" resultType="EqVO">
	SELECT eq_code
	    , eq_mdnm
	    , use 
	    , eq_mdno
	    , eq_dep
	    , eq_temp
	    , eq_min
	    , eq_max
	    , eq_standtemp
	    , eq_period
	    , manager
	    , eq_location
	    , eq_img
	    , line_code
	    , eq_type
	    , eq_name
	    , eq_ckdate
	    , description
	    , user_id
	FROM eq
	ORDER BY eq_code
</select>

    <!-- 등록 -->
<insert id="insertEqInfo" parameterType="EqVO">
	<selectKey keyProperty="eqCode"
			   resultType="String"
			   order="BEFORE">
select
    case
        when (max(substr(eq_code, 2, 8))) = to_char(sysdate, 'yyyyMMdd') then ('E' || to_char(max(substr(eq_code, 2, 13)) + 1))
        else ('E' || to_char(sysdate, 'yyyyMMdd') || to_char(lpad(1, 4, 0)) )
    end    eq_code
from    eq
    </selectKey>
  	INSERT INTO eq
  				(
	    	    eq_code
  			  , eq_mdnm
	     	  , eq_mdno
	     	  , use
	     	  , eq_type
	     	  , eq_min
	     	  , eq_max
	     	  , manager
	     	  , eq_location
	     	  , eq_img
	     	  , line_code
  				)
  	VALUES (
  			 #{eqCode}
  			,#{eqMdnm}
  			,#{eqMdno}
  			,#{use}
  			,#{eqType}
  			,#{eqMin}
  			,#{eqMax}
  			,#{manager}
  			,#{eqLocation}
  			,#{eqImg}
  			,#{lineCode}
  			)
</insert>

<!-- 	 수정
<update id="updateBoardInfo" parameterType="EqVO">
	UPDATE eq
	SET
		title = #{title}
		 , contents = #{contents}
		 , writer = #{writer}
		 , image = #{image}
		 , updatedate = sysdate
	WHERE bno = #{bno}
</update> -->

<!-- 삭제 -->
<delete id="deleteEqInfo" parameterType="String">
	DELETE from eq
	WHERE eq_code = #{eqCode}
</delete>

<!-- 
<insert id="insertEqInfo" parameterType="EqVO">
	<selectKey keyProperty="eqCode"
			   resultType="String"
			   order="BEFORE">
select
    case
        when (max(substr(eq_code, 2, 8))) = to_char(sysdate, 'yyyyMMdd') then ('O' || to_char(max(substr(eq_code, 2, 13)) + 1))
        else ('O' || to_char(sysdate, 'yyyyMMdd') || to_char(lpad(1, 4, 0)) )
    end    eq_code
from    eq
    </selectKey>
  	INSERT INTO eq
  				(
  				eq_mdnm
  			  , use
	    	  , eq_code
	     	  , eq_mdno
	    	  , eq_dep
	    	  , eq_temp
	    	  , eq_period
	    	  , employee_no
	    	  , manager
	    	  , eq_location
	    	  , eq_img
  				)
  	VALUES (
  			#{eqMdnm}
  			,#{use}
  			,#{eqCode}
  			,#{eqMdno}
  			,#{eqDep}
  			,#{eqTemp}
  			,#{eqPeriod}
  			,#{employeeNo}
  			,#{manager}
  			,#{eqLocation}
  			,#{eqImg}
  			
  			)
</insert>
 -->

    <!-- 단건조회 -->
<select id="selectEqInfo" resultType="EqVO">
    SELECT eq_mdnm
	    , eq_mdno
	    , eq_ckdate
	    , use
	    , eq_dep
	    , manager
	    , eq_period
	    , eq_img
	    , eq_code
	    , eq_standtemp
	    , eq_location
	    , line_code
    FROM   eq
    WHERE  eq_code = #{eqCode}
</select>

	<!-- 비가동 목록 중 일부 Eq쪽 조회 -->
<select id="selectEqAll2" resultType="EqVO">
	SELECT eq_code
	, eq_type
	, eq_name
	, eq_period
	, use
	FROM eq
	ORDER BY eq_code
</select>

	<!-- 비가동 목록 조회 -->
<select id="selctEqChckAll" resultType="EqChckVO">
	SELECT ec.eq_chck_opcd
	, ec.eq_code
	, ec.eq_nextchck
	, ec.eq_chckox
	, ec.start_date
	, ec.end_date
	, ec.reason
	, ec.comm
	, e.eq_name
	FROM eq_chck ec
	join eq e
	on ec.eq_code = e.eq_code
	ORDER BY eq_code
</select>

<!-- 설비 점검 조회 -->
<select id="selectjumgumAll" resultType="EqVO">
	SELECT  e.eq_code
		  , e.eq_period
		  , e.eq_ckdate
		  , ec.eq_nextchck
		  , ec.eq_chckox
	FROM  eq e
	JOIN  eq_chck ec
	ON	  e.eq_code = ec.eq_code
	ORDER BY eq_code
</select>

</mapper>