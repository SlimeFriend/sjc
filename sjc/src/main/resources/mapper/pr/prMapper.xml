<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjc.app.pr.mapper.PrdtMapper">

<!-- 조회 -->
<select id="selectPlanAll" resultType="PlanVO">
	select plan_code, 
			start_date,
			end_date,
			manager,
			comm,
			status
	from plan
</select>


<!-- 계획 상세 조회 -->

<select id="selectPlan" parameterType="String"  resultType="PlanDVO">
	select plan_detail_code,
			prd_name,
			quantity,
			no,
			comm,
			plan_code,
			prd_code
	from plan_detail
	where plan_code = #{planCode}
</select>

<!-- 지시 전체 조회 -->
<select id="selectOrderAll" resultType="POrderVO">
	select porder_code,
			start_date,
			porder_date,
			manager,
			comm,
			plan_code
	from porder
	
</select>

<!-- 지시 상세 조회 -->
<select id="selectOrder" parameterType="String" resultType="PDetailVO">
	select pdetail_code,
			prd_name,
			want,
			command,
			output,
			no,
			comm,
			porder_code,
			status,
			line_code
	from pdetail
	where porder_code = #{porderCode}
</select>

<!-- 공정 실적 조회 -->
<select id="selectPResult" resultType="PResultVO">
	select presult_code,
			prd_code,
			start_time,
			end_time,
			output,
			err,
			process_date,
			eq_code,
			process_name,
			manager,
			pdetail_code,
			ldetail_code,
			input
	from presult
	where status = 'b3'
</select>

<!-- 계획 조건부 조회 -->
<select id="selectPlanS" resultType="PlanVO" parameterType="String">
		select plan_code, 
			start_date,
			end_date,
			manager,
			comm,
			status
	from plan
	where status like #{status}||'%'
</select>

<!-- 생산 관리쪽 지시 -->
<select id="useD" resultType="PDetailVO">
	
	select p.pdetail_code,
			p.prd_name,
			p.want,
			p.command,
			p.output,
			p.no,
			p.comm,
			p.porder_code,
			p.status,
			p.line_code,
			p.prd_code
	from pdetail p 
	join porder o
	on p.porder_code = o.porder_code
	where o.status = 'b1' or o.status = 'b2'
</select>

<!-- 생산 관리 필요 자재 -->
<select id="pNeed" parameterType="String" resultType="NeedVO">
select d.mt_code,
        d.quantity_required,
        m.mt_name
from prd p
join bom b 
on p.prd_code = b.prd_code
join b_detail d 
on b.bom_code = d.bom_code
join mt m
on d.mt_code = m.mt_code
where p.prd_code = #{prdCode}
</select>

<!-- 생산 관리 공정 -->
<select id="pPrc" parameterType="String" resultType="PrcVO">
	select  f.no,
        p.process_name,
        d.eq_code,
        d.ldetail_code
	from line l 
	join ldetail d
	on l.line_code = d.line_code
	join flow f     
	on d.flow_code = f.flow_code
	join process p
	on f.process_code = p.process_code
	where l.line_code = #{lineCode}
	order by f.no
</select>

<!-- 생산 실적 최초 생성 -->
<insert id="insertR" parameterType="PResultVO">
      insert into PRESULT(presult_code,
						prd_code,
						output,
						err,
						eq_code,
						process_name,
						pdetail_code,
						ldetail_code,
						input,
						status,
						no)
   
     
     select  CREATE_PSEQ(),
     l.prd_code,  
     0,
     0,
     d.eq_code,
     p.process_name,
      #{pdetailCode},          
      d.ldetail_code,
      0,
      'b1',
        f.no
        
	from line l 
	join ldetail d
	on l.line_code = d.line_code
	join flow f     
	on d.flow_code = f.flow_code AND d.no = f.no
	join process p
	on f.process_code = p.process_code
	where l.line_code = #{lineCode}
	order by f.no
</insert>

<!-- 생산 실적(진행) 있는지 체크 -->
<select id="searchR" parameterType="String" resultType="PResultVO">
	select presult_code,
			prd_code,
			start_time,
			end_time,
			output,
			err,
			process_date,
			eq_code,
			process_name,
			manager,
			pdetail_code,
			ldetail_code,
			input,
			status,
			no
	from presult
	where pdetail_code = #{pdetailCode}
	order by no
</select>

<!-- 공정 자재 가져오기 프로시져 호출 -->
<select id="outMt" statementType="CALLABLE">
     CALL outMt(#{prdCd, mode=IN, jdbcType=VARCHAR},
     			 #{accounts, mode=IN, jdbcType=INTEGER},
     			   #{vLineCode, mode=IN, jdbcType=VARCHAR},
     			   #{pdCd, mode=IN, jdbcType=VARCHAR},
     			   #{res, mode=OUT, jdbcType=VARCHAR})
</select>

<!-- 공정 시작 -->
<select id="pstart" statementType="CALLABLE">
     CALL pstart(#{pdCode, mode=IN, jdbcType=VARCHAR},
     			 #{ipt, mode=IN, jdbcType=INTEGER})
     			
</select>


<!-- 라인 매니저 -->
<select id="lmanager" parameterType="String" resultType="InfoUserVO">
	select u.user_id,
			u.user_name
	from sjc_user u
	join ld_manager m
	on u.user_id = m.user_id
	join ldetail l
	on m.ldetail_code = l.ldetail_code
	where l.ldetail_code = #{ldetailCode}
	order by l.no
</select>

<!-- 매니저 이름 가져오기 -->
<select id="findMng" parameterType="String" resultType="InfoUserVO">
	select user_name
	from sjc_user
	where user_id = #{userId}
</select>






</mapper>