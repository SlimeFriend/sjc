<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjc.app.pr.mapper.PrdtMapper">

<!-- 조회 -->
<select id="selectPlanAll" resultType="PlanVO">
	select p.plan_code, 
			p.start_date,
			p.end_date,
			p.manager,
			p.comm,
			p.status,
			u.user_name
	from plan p
	join sjc_user u
	on p.manager = u.user_id
	order by p.status
</select>


<!-- 계획 상세 조회 -->

<select id="selectPlan" parameterType="String"  resultType="PlanDVO">
	select plan_detail_code,
			prd_name,
			quantity,
			no,
			plan_code,
			prd_code
	from plan_detail
	where plan_code = #{planCode}
</select>

<!-- 지시 전체 조회 -->
<select id="selectOrderAll" resultType="POrderVO">
	select p.porder_code,
			p.start_date,
			p.porder_date,
			p.manager,
			p.comm,
			plan_code,
			u.user_name,
			p.status
	from porder p
	join sjc_user u
	on p.manager = u.user_id
	order by p.status
</select>

<!-- 지시 상세 조회 -->
<select id="selectOrder" parameterType="String" resultType="PDetailVO">
	select pdetail_code,
			prd_name,
			want,
			command,
			output,
			no,
			comm,
			porder_code,
			status,
			line_code
	from pdetail
	where porder_code = #{porderCode}
</select>

<!-- 공정 실적 조회 -->
<select id="selectPResult" resultType="PResultVO">
	select p.presult_code,
			p.prd_code,
			p.start_time,
			p.end_time,
			p.output,
			p.err,
			p.process_date,
			p.eq_code,
			p.process_name,
			p.manager,
			p.pdetail_code,
			p.ldetail_code,
			p.input,
			u.user_name
	from presult p
	join sjc_user u
	on p.manager = u.user_id
	where p.status = 'b3'
	order by pdetail_code desc, start_time desc
</select>

<!-- 계획 조건부 조회 -->
<select id="selectPlanS" resultType="PlanVO" parameterType="String">
		select p.plan_code, 
			p.start_date,
			p.end_date,
			p.manager,
			p.comm,
			p.status,
			u.user_name
	from plan p
	join sjc_user u
	on p.manager = u.user_id
	where status like #{status}||'%'
</select>

<!-- 생산 관리쪽 지시 -->
<select id="useD" resultType="PDetailVO">
	
	select p.pdetail_code,
			p.prd_name,
			p.want,
			p.command,
			p.output,
			p.no,
			p.comm,
			p.porder_code,
			p.status,
			p.line_code,
			p.prd_code
	from pdetail p 
	join porder o
	on p.porder_code = o.porder_code
	where o.status = 'b1' or o.status = 'b2'
</select>

<!-- 생산 관리 필요 자재 -->
<select id="pNeed" parameterType="String" resultType="NeedVO">
select d.mt_code,
        d.quantity_required,
        m.mt_name
from prd p
join bom b 
on p.prd_code = b.prd_code
join b_detail d 
on b.bom_code = d.bom_code
join mt m
on d.mt_code = m.mt_code
where p.prd_code = #{prdCode}
</select>

<!-- 생산 관리 공정 -->
<select id="pPrc" parameterType="String" resultType="PrcVO">
	select  f.no,
        p.process_name,
        d.eq_code,
        d.ldetail_code
	from line l 
	join ldetail d
	on l.line_code = d.line_code
	join flow f     
	on d.flow_code = f.flow_code
	join process p
	on f.process_code = p.process_code
	where l.line_code = #{lineCode}
	order by f.no
</select>

<!-- 생산 실적 최초 생성 -->
<insert id="insertR" parameterType="PResultVO">
      insert into PRESULT(presult_code,
						prd_code,
						output,
						err,
						eq_code,
						process_name,
						pdetail_code,
						ldetail_code,
						input,
						status,
						no)
   
     
     select  CREATE_PSEQ(),
     l.prd_code,  
     0,
     0,
     d.eq_code,
     p.process_name,
      #{pdetailCode},          
      d.ldetail_code,
      0,
      'b1',
        f.no
        
	from line l 
	join ldetail d
	on l.line_code = d.line_code
	join flow f     
	on d.flow_code = f.flow_code AND d.no = f.no
	join process p
	on f.process_code = p.process_code
	where l.line_code = #{lineCode}
	order by f.no
</insert>

<!-- 생산 실적(진행) 있는지 체크 -->
<select id="searchR" parameterType="String" resultType="PResultVO">
	select p.presult_code,
			p.prd_code,
			p.start_time,
			p.end_time,
			p.output,
			p.err,
			p.process_date,
			p.eq_code,
			p.process_name,
			p.manager,
			p.pdetail_code,
			p.ldetail_code,
			p.input,
			p.status,
			p.no,
			u.user_name
	from presult p
	left join sjc_user u
	on p.manager = u.user_id
	where p.pdetail_code = #{pdetailCode}
	order by p.no
</select>

<!-- 공정 자재 가져오기 프로시져 호출 -->
<select id="outMt" statementType="CALLABLE">
     CALL outMt(#{prdCd, mode=IN, jdbcType=VARCHAR},
     			 #{accounts, mode=IN, jdbcType=INTEGER},
     			   #{vLineCode, mode=IN, jdbcType=VARCHAR},
     			   #{pdCd, mode=IN, jdbcType=VARCHAR},
     			   #{res, mode=OUT, jdbcType=VARCHAR})
</select>

<!-- 공정 시작 -->
<select id="pstart" statementType="CALLABLE">
     CALL pstart(#{pdCode, mode=IN, jdbcType=VARCHAR},
     			 #{ipt, mode=IN, jdbcType=INTEGER},
     			 #{ldmng, mode=IN, typeHandler=OracleArrayHandler})
     			
</select>


<!-- 라인 매니저 -->
<select id="lmanager" parameterType="String" resultType="InfoUserVO">
	select u.user_id,
			u.user_name
	from sjc_user u
	join ld_manager m
	on u.user_id = m.user_id
	join ldetail l
	on m.ldetail_code = l.ldetail_code
	where l.ldetail_code = #{ldetailCode}
	order by l.no
</select>


<!-- 제품 리스트 -->
<select id="productList" resultType="ProductVO">
		SELECT prd_name,
		       prd_code
		FROM   prd
</select>

<!-- 플랜 코드 생성 -->
	<select id="getPlanCode" resultType="String">
		SELECT 
		    CASE
		        WHEN (MAX(SUBSTR(plan_code, 3, 8)) = TO_CHAR(SYSDATE, 'yyyyMMdd')) THEN 
		            ('PL' || TO_CHAR(MAX(SUBSTR(plan_code, 3, 11)) + 1))
		        ELSE 
		            ('PL' || TO_CHAR(SYSDATE, 'yyyyMMdd') || TO_CHAR(LPAD(1, 3, '0')))
		    END AS plan_code
		FROM plan
	</select>
	
<!-- 플랜생성 -->
<insert id="insertPlan" parameterType="PlanVO">
	insert into plan(plan_code,
					start_date,
					end_date,
					manager,
					comm,
					status,
					ord_code)
	values (#{planCode},
			#{startDate},
			#{endDate},
			#{manager},
			#{comm},
			'a1',
			#{ordCode})
</insert>

<!-- 계획상세 생성 -->
<insert id="insertPlanDetail" parameterType="map">
    INSERT INTO plan_detail (
        plan_detail_code,
        plan_code,
        quantity,
        prd_code,
        prd_name
    ) VALUES (
        'PLD' || TO_CHAR(SYSDATE, 'yyyyMMdd') || LPAD(pld_seq.NEXTVAL, 3, '0'),
        #{planCode},
        #{productVO.ordQuantity},
        #{productVO.prdCode},
        #{productVO.prdName}
    )
</insert>

<delete id="deletePlanD" parameterType="String">
	delete plan_detail
	where plan_code = #{pCode}
</delete>

<delete id="deletePlan" parameterType="String">
	delete plan
	where plan_code = #{pCode}
</delete>

<!-- 지시 라인 제품 보여주기 -->
<select id="linePrdList" resultType="LinePrdVO">
	select l.line_code,
        l.prd_code,
        p.prd_name,
        l.use
		from line l
		join prd p
		on l.prd_code = p.prd_code
		order by l.use DESC, p.prd_code, l.line_code
</select>


<select id="orderMt" resultType="NeedVO">
	select d.mt_code,
        d.quantity_required * #{command} AS quantity_required,
        m.mt_name,
        m.current_stc
		from prd p
		join bom b 
		on p.prd_code = b.prd_code
		join b_detail d 
		on b.bom_code = d.bom_code
		join mt m
		on d.mt_code = m.mt_code
		where p.prd_code = #{prdCode}
	
</select>

<!-- 생산 지시를 위한 계획 코드(미진행, 진행중) 가져오기 -->
<select id="findPC" resultType="String">
	select plan_code
	from plan
	where status = 'a1' OR status = 'a2'
</select>


<!-- 오더 코드 생성 -->
<select id="getOrdCode" resultType="String">
	SELECT 
		CASE
		WHEN (MAX(SUBSTR(porder_code, 3, 8)) = TO_CHAR(SYSDATE, 'yyyyMMdd')) THEN 
		     ('PO' || TO_CHAR(MAX(SUBSTR(porder_code, 3, 11)) + 1))
		ELSE 
		     ('PO' || TO_CHAR(SYSDATE, 'yyyyMMdd') || TO_CHAR(LPAD(1, 3, '0')))
		   END AS porder_code
		FROM porder
</select>
	
	
	
<!-- 지시 생성 -->
<insert id="insertOrd" parameterType="PlanVO">
	insert into porder(porder_code,
					plan_code,
					porder_date,
					manager,
					comm,
					status)
	values (#{porderCode},
			#{planCode},
			sysdate,
			#{manager},
			#{comm},
			'b1')
</insert>

<!-- 지시상세 생성 -->
<insert id="insertDetail" parameterType="map">
    INSERT INTO pdetail (
        pdetail_code,
        prd_name,
        want,
        command,
        output,
        porder_code,
        status,
        line_code,
        prd_code
        
    ) VALUES (
        'PD' || TO_CHAR(SYSDATE, 'yyyyMMdd') || LPAD(pd_seq.NEXTVAL, 4, '0'),
        #{linePrdVO.prdName},
        #{linePrdVO.want},
        #{linePrdVO.command},
        0,
        #{porderCode},
        'b1',
        #{linePrdVO.lineCode},
        #{linePrdVO.prdCode}
        
    )
</insert>	
	
<!-- 생산계획 남은 제품 수 -->
<select id="planPrd" resultType="planDVO">
select  l.prd_name,
        l.prd_code,
        l.quantity - NVL(SUM(d.output), 0) quantity,
        p.start_date,
        p.end_date
from plan_detail l
left join plan p
on l.plan_code = p.plan_code
left join porder o
on l.plan_code = o.plan_code
left join pdetail d
on o.porder_code = d.porder_code
where l.plan_code = #{planCode}
group by l.prd_code, l.prd_name, l.quantity, l.plan_detail_code, p.start_date, p.end_date
</select>

<!-- 생산계획 생성시 주문 보여주기 -->
<select id="oList" resultType="String">
select ord_code
from ord
where ord_status = '재고부족'
</select>

<!-- 주문 클릭 시 가져올 제품 -->
<select id="ordPrd" resultType="ProductVO">
select prd_name,
		prd_code,
		ord_quantity
from ord_detail
where ord_code = #{ordCode}
</select>


<!-- 계획 클릭 시 가져올 라인 -->
<select id="planL" resultType="LinePrdVO">
select l.line_code,
        d.prd_code,
        d.prd_name,
        l.use
from plan_detail d
join line l
on d.prd_code = l.prd_code
where d.plan_code = #{planCode} 
order by l.use DESC, d.prd_code, l.line_code
</select>

	<!-- 지시 생성 시 선택 라인 상태 변경 -->
	<update id="updateLine" parameterType="LinePrdVO">
		update line
		set use = 'U'
		where line_code = #{lineCode}
	</update>

	<!-- 계획 검색 -->
	<select id="searchPlan" resultType="planVO">
	    SELECT p.plan_code,
	    		p.start_date,
	    		p.end_date,
	    		u.user_name,
	    		p.status,
	    		p.comm
	    FROM   plan p
	    JOIN sjc_user u
	    ON p.manager = u.user_id
	    WHERE 1 = 1
	    <if test="planCode != null and planCode != ''">
	        AND p.plan_code LIKE '%' || #{planCode} || '%'
	    </if>
	    <if test="startDate != null and startDate != ''">
	        AND p.start_date <![CDATA[>=]]> TO_DATE(#{startDate}, 'YYYY-MM-DD')
	    </if> 
	    <if test="endDate != null and endDate != ''">
	        AND p.end_date <![CDATA[<=]]> TO_DATE(#{endDate}, 'YYYY-MM-DD') + 1
	    </if>
	    <if test="status != null and status != ''">
        	AND status like #{status}||'%'
    	</if>
	</select>
	
	<select id="searchOrders" resultType="porderVO">
	    SELECT p.porder_code,
	    		p.start_date,
	    		p.porder_date,
	    		u.user_name,
	    		p.status,
	    		p.comm
	    FROM   porder p
	    JOIN sjc_user u
	    ON p.manager = u.user_id
	    WHERE 1 = 1
	    <if test="porderCode != null and porderCode != ''">
	        AND p.porder_code LIKE '%' || #{porderCode} || '%'
	    </if>
	    <if test="startDate != null and startDate != ''">
	        AND p.porder_date <![CDATA[>=]]> TO_DATE(#{startDate}, 'YYYY-MM-DD')
	    </if> 
	    <if test="endDate != null and endDate != ''">
	        AND p.porder_date <![CDATA[<=]]> TO_DATE(#{endDate}, 'YYYY-MM-DD') + 1
	    </if>
	    <if test="status != null and status != ''">
	    	<if test="status == 'b3'">
	    		AND status = 'b3' OR status = '완제품품질검사중' OR status = '완제품품질검사완료'
	    	</if>
	    	<if test="status != 'b3'">
        	AND status like #{status}||'%'
	    	
	    	</if>
    	</if>
    	
	</select>
	
	<select id="findD" parameterType="String" resultType="String">
		select pdetail_code
		from pdetail
		where porder_code = #{porderCode}
	</select>
	
	<delete id="deleteResult" parameterType="String">
		delete presult
		where pdetail_code = #{pdetailCode}
	</delete>
	
	<delete id="deleteDetail" parameterType="String">
		delete pdetail
		where porder_code = #{porderCode}
	</delete>

	<delete id="deleteOrder" parameterType="String">
		delete porder
		where porder_code = #{porderCode}
	</delete>
	
	<select id="searchOrderPlan" parameterType="String" resultType="String">
		select plan_code
		from porder
		where porder_code = #{porderCode}
	</select>
	
	<select id="countOrder" parameterType="String" resultType="int">
		select count(porder_code)
		from porder
		where plan_code = #{planCode}
	</select>
	
	<update id="updatePlanS" parameterType="String">
		update plan
		set status = 'a1'
		where plan_code = #{planCode}
	</update>
</mapper>