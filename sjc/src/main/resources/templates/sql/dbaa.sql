--------------------------------------------------------
--  파일이 생성됨 - 목요일-11월-14-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type ARRLDMANAGER
--------------------------------------------------------

  CREATE OR REPLACE TYPE "ARRLDMANAGER" AS TABLE OF NUMBER; -- ARRAY OF NUMBER

/
--------------------------------------------------------
--  DDL for Type ARR_LDMANAGER
--------------------------------------------------------

  CREATE OR REPLACE TYPE "ARR_LDMANAGER" AS TABLE OF NUMBER; -- ARRAY OF NUMBER

/
--------------------------------------------------------
--  DDL for Sequence COPY_DETAIL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COPY_DETAIL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COPY_LOG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COPY_LOG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "CP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INS_DETAIL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "INS_DETAIL_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 723 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence INS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "INS_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 333 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MOUT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MOUT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MTL_OD_DETAIL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MTL_OD_DETAIL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 182 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MTL_OD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MTL_OD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 212 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MT_IN_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MT_IN_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 75 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORDER_REQUEST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ORDER_REQUEST_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 9 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORD_DETAIL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ORD_DETAIL_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ORD_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 339 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence OUT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OUT_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 128 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 361 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PLD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PLD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 461 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PRD_MANAGEMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PRD_MANAGEMENT_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 42 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2561 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TEST_EQ_LOG
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_TEST_EQ_LOG"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 31921 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_USER_HISTORY
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_USER_HISTORY"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 26 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table BOM
--------------------------------------------------------

  CREATE TABLE "BOM" 
   (	"BOM_CODE" VARCHAR2(30 BYTE), 
	"REG_DATE" DATE DEFAULT SYSDATE, 
	"DESCRIPTION" VARCHAR2(500 BYTE), 
	"COMM" VARCHAR2(500 BYTE), 
	"MANAGER" VARCHAR2(30 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "BOM"."BOM_CODE" IS 'BOM 코드';
   COMMENT ON COLUMN "BOM"."REG_DATE" IS '등록 일자';
   COMMENT ON COLUMN "BOM"."DESCRIPTION" IS '설명';
   COMMENT ON COLUMN "BOM"."COMM" IS '비고';
   COMMENT ON COLUMN "BOM"."MANAGER" IS '담당자';
   COMMENT ON COLUMN "BOM"."PRD_CODE" IS '제품 코드';
   COMMENT ON TABLE "BOM"  IS 'BOM';
--------------------------------------------------------
--  DDL for Table B_DETAIL
--------------------------------------------------------

  CREATE TABLE "B_DETAIL" 
   (	"B_DETAIL_CODE" VARCHAR2(30 BYTE), 
	"QUANTITY_REQUIRED" NUMBER, 
	"COMM" VARCHAR2(500 BYTE), 
	"BOM_CODE" VARCHAR2(30 BYTE), 
	"MT_CODE" VARCHAR2(30 BYTE), 
	"NO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "B_DETAIL"."B_DETAIL_CODE" IS 'BOM상세 코드';
   COMMENT ON COLUMN "B_DETAIL"."QUANTITY_REQUIRED" IS '소요수량';
   COMMENT ON COLUMN "B_DETAIL"."COMM" IS '비고';
   COMMENT ON COLUMN "B_DETAIL"."BOM_CODE" IS 'BOM 코드';
   COMMENT ON COLUMN "B_DETAIL"."MT_CODE" IS '자재 코드';
   COMMENT ON COLUMN "B_DETAIL"."NO" IS '순서';
   COMMENT ON TABLE "B_DETAIL"  IS 'BOM상세';
--------------------------------------------------------
--  DDL for Table COMM_CODE
--------------------------------------------------------

  CREATE TABLE "COMM_CODE" 
   (	"MAIN" VARCHAR2(4 BYTE), 
	"SUB" VARCHAR2(4 BYTE), 
	"NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CP
--------------------------------------------------------

  CREATE TABLE "CP" 
   (	"CP_CODE" VARCHAR2(100 BYTE), 
	"CP_NAME" VARCHAR2(50 BYTE), 
	"BUSINESS_NO" VARCHAR2(50 BYTE), 
	"ADDRESS" VARCHAR2(150 BYTE), 
	"COMM" VARCHAR2(500 BYTE), 
	"CP_TYPE" VARCHAR2(50 BYTE), 
	"TEL" VARCHAR2(20 BYTE), 
	"CP_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "CP"."CP_CODE" IS '업체 코드';
   COMMENT ON COLUMN "CP"."CP_NAME" IS '업체 이름';
   COMMENT ON COLUMN "CP"."BUSINESS_NO" IS '사업자번호';
   COMMENT ON COLUMN "CP"."ADDRESS" IS '주소';
   COMMENT ON COLUMN "CP"."COMM" IS '비고';
   COMMENT ON COLUMN "CP"."CP_TYPE" IS '업체 구분';
   COMMENT ON COLUMN "CP"."TEL" IS '전화번호';
   COMMENT ON COLUMN "CP"."CP_DATE" IS '수정일자';
   COMMENT ON TABLE "CP"  IS '업체';
--------------------------------------------------------
--  DDL for Table DEF
--------------------------------------------------------

  CREATE TABLE "DEF" 
   (	"DEFCODE" VARCHAR2(30 BYTE), 
	"DEFREASON" VARCHAR2(100 BYTE), 
	"COMM" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "DEF"."DEFCODE" IS '불량코드';
   COMMENT ON COLUMN "DEF"."DEFREASON" IS '불량사유';
   COMMENT ON COLUMN "DEF"."COMM" IS '비고';
   COMMENT ON TABLE "DEF"  IS '불량';
--------------------------------------------------------
--  DDL for Table DEPARTMENT
--------------------------------------------------------

  CREATE TABLE "DEPARTMENT" 
   (	"DEPT_CODE" VARCHAR2(20 BYTE), 
	"DEPT_NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "DEPARTMENT"."DEPT_CODE" IS '부서 코드';
   COMMENT ON COLUMN "DEPARTMENT"."DEPT_NAME" IS '부서 이름';
   COMMENT ON TABLE "DEPARTMENT"  IS '부서';
--------------------------------------------------------
--  DDL for Table EQ
--------------------------------------------------------

  CREATE TABLE "EQ" 
   (	"EQ_CODE" VARCHAR2(100 BYTE), 
	"EQ_MDNM" VARCHAR2(100 BYTE), 
	"USE" VARCHAR2(10 BYTE), 
	"EQ_MDNO" VARCHAR2(20 BYTE), 
	"EQ_TEMP" NUMBER, 
	"EQ_MIN" NUMBER, 
	"EQ_MAX" NUMBER, 
	"EQ_STANDTEMP" NUMBER, 
	"EQ_PERIOD" NUMBER DEFAULT 3, 
	"MANAGER" VARCHAR2(20 BYTE), 
	"EQ_IMG" VARCHAR2(500 BYTE), 
	"LINE_CODE" VARCHAR2(40 BYTE), 
	"EQ_TYPE" VARCHAR2(30 BYTE), 
	"EQ_NAME" VARCHAR2(30 BYTE), 
	"EQ_CKDATE" DATE, 
	"DESCRIPTION" VARCHAR2(500 BYTE), 
	"USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "EQ"."EQ_CODE" IS '설비 코드';
   COMMENT ON COLUMN "EQ"."EQ_MDNM" IS '모델명';
   COMMENT ON COLUMN "EQ"."USE" IS '사용여부';
   COMMENT ON COLUMN "EQ"."EQ_MDNO" IS '모델번호';
   COMMENT ON COLUMN "EQ"."EQ_TEMP" IS '가용온도';
   COMMENT ON COLUMN "EQ"."EQ_MIN" IS '최저온도';
   COMMENT ON COLUMN "EQ"."EQ_MAX" IS '최고온도';
   COMMENT ON COLUMN "EQ"."EQ_STANDTEMP" IS '기준온도';
   COMMENT ON COLUMN "EQ"."EQ_PERIOD" IS '점검주기';
   COMMENT ON COLUMN "EQ"."MANAGER" IS '담당자';
   COMMENT ON COLUMN "EQ"."EQ_IMG" IS '이미지';
   COMMENT ON COLUMN "EQ"."LINE_CODE" IS '라인';
   COMMENT ON COLUMN "EQ"."EQ_TYPE" IS '설비 구분';
   COMMENT ON COLUMN "EQ"."EQ_NAME" IS '설비 명';
   COMMENT ON COLUMN "EQ"."EQ_CKDATE" IS '점검일자';
   COMMENT ON COLUMN "EQ"."DESCRIPTION" IS '설명';
   COMMENT ON COLUMN "EQ"."USER_ID" IS '사원 번호';
   COMMENT ON TABLE "EQ"  IS '설비';
--------------------------------------------------------
--  DDL for Table EQ_CHCK
--------------------------------------------------------

  CREATE TABLE "EQ_CHCK" 
   (	"EQ_CHCK_OPCD" VARCHAR2(100 BYTE), 
	"EQ_CODE" VARCHAR2(100 BYTE), 
	"EQ_NEXTCHCK" DATE, 
	"EQ_CHCKOX" VARCHAR2(100 BYTE), 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"REASON" VARCHAR2(500 BYTE), 
	"COMM" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "EQ_CHCK"."EQ_CHCK_OPCD" IS '설비가동코드';
   COMMENT ON COLUMN "EQ_CHCK"."EQ_CODE" IS '설비 코드';
   COMMENT ON COLUMN "EQ_CHCK"."EQ_NEXTCHCK" IS '다음점검일';
   COMMENT ON COLUMN "EQ_CHCK"."EQ_CHCKOX" IS '점검유무';
   COMMENT ON COLUMN "EQ_CHCK"."START_DATE" IS '시작 일자';
   COMMENT ON COLUMN "EQ_CHCK"."END_DATE" IS '종료 일자';
   COMMENT ON COLUMN "EQ_CHCK"."REASON" IS '사유';
   COMMENT ON COLUMN "EQ_CHCK"."COMM" IS '비고';
   COMMENT ON TABLE "EQ_CHCK"  IS '설비점검';
--------------------------------------------------------
--  DDL for Table FLOW
--------------------------------------------------------

  CREATE TABLE "FLOW" 
   (	"NO" NUMBER, 
	"FLOW_CODE" VARCHAR2(30 BYTE), 
	"PROCESS_CODE" VARCHAR2(30 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "FLOW"."NO" IS '순서';
   COMMENT ON COLUMN "FLOW"."FLOW_CODE" IS '공정흐름도 코드';
   COMMENT ON COLUMN "FLOW"."PROCESS_CODE" IS '공정 코드';
   COMMENT ON COLUMN "FLOW"."PRD_CODE" IS '제품 코드';
   COMMENT ON TABLE "FLOW"  IS '공정흐름도';
--------------------------------------------------------
--  DDL for Table INSPECTION
--------------------------------------------------------

  CREATE TABLE "INSPECTION" 
   (	"INS_DATE" DATE DEFAULT sysdate, 
	"INS_STATUS" VARCHAR2(50 BYTE) DEFAULT '검사 대기', 
	"INS_CODE" VARCHAR2(30 BYTE), 
	"USER_ID" NUMBER, 
	"USER_NAME" VARCHAR2(50 BYTE), 
	"MTL_OD_DETAIL_CODE" VARCHAR2(30 BYTE), 
	"NUMBER_OF_TESTS" NUMBER, 
	"NUMBER_OF_PASSES" NUMBER, 
	"NUMBER_OF_FAILED" NUMBER, 
	"TOTAL_PASS" VARCHAR2(10 BYTE), 
	"NUMBER_OF_TOTAL_PASS" NUMBER, 
	"PDETAIL_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "INSPECTION"."INS_DATE" IS '품질검사 일자';
   COMMENT ON COLUMN "INSPECTION"."INS_STATUS" IS '품질검사 상태';
   COMMENT ON COLUMN "INSPECTION"."INS_CODE" IS '품질검사 코드';
   COMMENT ON COLUMN "INSPECTION"."USER_ID" IS '사용자번호';
   COMMENT ON COLUMN "INSPECTION"."USER_NAME" IS '사용자이름';
   COMMENT ON COLUMN "INSPECTION"."MTL_OD_DETAIL_CODE" IS '자재발주코드';
   COMMENT ON COLUMN "INSPECTION"."NUMBER_OF_TESTS" IS '검사수';
   COMMENT ON COLUMN "INSPECTION"."NUMBER_OF_PASSES" IS '합격수';
   COMMENT ON COLUMN "INSPECTION"."NUMBER_OF_FAILED" IS '불합격수';
   COMMENT ON COLUMN "INSPECTION"."PDETAIL_CODE" IS '생산지시코드';
   COMMENT ON TABLE "INSPECTION"  IS '품질검사';
--------------------------------------------------------
--  DDL for Table INS_DETAIL
--------------------------------------------------------

  CREATE TABLE "INS_DETAIL" 
   (	"INS_DETAIL_CODE" VARCHAR2(30 BYTE), 
	"INS_ITEM_CODE" VARCHAR2(30 BYTE), 
	"INS_VALUE" VARCHAR2(50 BYTE), 
	"INS_RESULT" VARCHAR2(50 BYTE), 
	"INS_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "INS_DETAIL"."INS_DETAIL_CODE" IS '품질검사 상세 코드';
   COMMENT ON COLUMN "INS_DETAIL"."INS_ITEM_CODE" IS '품질검사 항목 코드';
   COMMENT ON COLUMN "INS_DETAIL"."INS_VALUE" IS '품질검사 결과값';
   COMMENT ON COLUMN "INS_DETAIL"."INS_RESULT" IS '품질검사 결과판정';
   COMMENT ON COLUMN "INS_DETAIL"."INS_CODE" IS '품질검사 코드';
   COMMENT ON TABLE "INS_DETAIL"  IS '품질검사 상세';
--------------------------------------------------------
--  DDL for Table INS_ITEM
--------------------------------------------------------

  CREATE TABLE "INS_ITEM" 
   (	"INS_ITEM_CODE" VARCHAR2(30 BYTE), 
	"INS_ITEM_NAME" VARCHAR2(50 BYTE), 
	"INS_ITEM_CITERIA" VARCHAR2(100 BYTE), 
	"INS_ITEM_COMM" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "INS_ITEM"."INS_ITEM_CODE" IS '품질검사 항목 코드';
   COMMENT ON COLUMN "INS_ITEM"."INS_ITEM_NAME" IS '품질검사 항목 이름';
   COMMENT ON COLUMN "INS_ITEM"."INS_ITEM_CITERIA" IS '품질검사기준';
   COMMENT ON TABLE "INS_ITEM"  IS '품질검사 항목';
--------------------------------------------------------
--  DDL for Table INS_MAP
--------------------------------------------------------

  CREATE TABLE "INS_MAP" 
   (	"MT_CODE" VARCHAR2(30 BYTE), 
	"INS_ITEM_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "INS_MAP"."MT_CODE" IS '자재코드';
   COMMENT ON COLUMN "INS_MAP"."INS_ITEM_CODE" IS '검사항목코드';
--------------------------------------------------------
--  DDL for Table INS_PRD_MAP
--------------------------------------------------------

  CREATE TABLE "INS_PRD_MAP" 
   (	"INS_ITEM_CODE" VARCHAR2(30 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table INS_TYPE
--------------------------------------------------------

  CREATE TABLE "INS_TYPE" 
   (	"INS_TYPE_CODE" VARCHAR2(30 BYTE), 
	"INS_TYPE_NAME" VARCHAR2(50 BYTE), 
	"INS_ITEM_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "INS_TYPE"."INS_TYPE_CODE" IS '품질검사 유형 코드';
   COMMENT ON COLUMN "INS_TYPE"."INS_TYPE_NAME" IS '품질검사 유형 이름';
   COMMENT ON TABLE "INS_TYPE"  IS '품질검사 유형';
--------------------------------------------------------
--  DDL for Table LDETAIL
--------------------------------------------------------

  CREATE TABLE "LDETAIL" 
   (	"LINE_CODE" VARCHAR2(30 BYTE), 
	"EQ_CODE" VARCHAR2(30 BYTE), 
	"LDETAIL_CODE" VARCHAR2(30 BYTE), 
	"FLOW_CODE" VARCHAR2(30 BYTE), 
	"NO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "LDETAIL"."LINE_CODE" IS '라인 코드';
   COMMENT ON COLUMN "LDETAIL"."EQ_CODE" IS '설비 코드';
   COMMENT ON COLUMN "LDETAIL"."LDETAIL_CODE" IS '라인상세정보 코드';
   COMMENT ON COLUMN "LDETAIL"."FLOW_CODE" IS '공정흐름도 코드';
   COMMENT ON COLUMN "LDETAIL"."NO" IS '순서';
   COMMENT ON TABLE "LDETAIL"  IS '라인상세정보';
--------------------------------------------------------
--  DDL for Table LD_MANAGER
--------------------------------------------------------

  CREATE TABLE "LD_MANAGER" 
   (	"LDETAIL_CODE" VARCHAR2(30 BYTE), 
	"USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LINE
--------------------------------------------------------

  CREATE TABLE "LINE" 
   (	"LINE_CODE" VARCHAR2(30 BYTE), 
	"USE" VARCHAR2(10 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE), 
	"LINE_NAME" VARCHAR2(30 BYTE), 
	"LINE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "LINE"."LINE_CODE" IS '라인 코드';
   COMMENT ON COLUMN "LINE"."USE" IS '사용여부';
   COMMENT ON COLUMN "LINE"."PRD_CODE" IS '제품 코드';
   COMMENT ON COLUMN "LINE"."LINE_NAME" IS '라인명';
   COMMENT ON COLUMN "LINE"."LINE_DATE" IS '수정일';
   COMMENT ON TABLE "LINE"  IS '라인';
--------------------------------------------------------
--  DDL for Table MT
--------------------------------------------------------

  CREATE TABLE "MT" 
   (	"MT_CODE" VARCHAR2(30 BYTE), 
	"MT_NAME" VARCHAR2(50 BYTE), 
	"MATERIAL_TYPE" VARCHAR2(50 BYTE), 
	"SPECIFICATION" VARCHAR2(20 BYTE), 
	"UNIT" VARCHAR2(20 BYTE), 
	"UNIT_PRICE" NUMBER, 
	"SAFETY_STOCK" NUMBER, 
	"COMM" VARCHAR2(500 BYTE), 
	"STC_CODE" VARCHAR2(30 BYTE), 
	"UPDATE_DATE" DATE, 
	"CURRENT_STC" NUMBER, 
	"PRD_CODE" VARCHAR2(30 BYTE), 
	"CP_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MT"."MT_CODE" IS '자재 코드';
   COMMENT ON COLUMN "MT"."MT_NAME" IS '자재 이름';
   COMMENT ON COLUMN "MT"."MATERIAL_TYPE" IS '자재구분';
   COMMENT ON COLUMN "MT"."SPECIFICATION" IS '규격';
   COMMENT ON COLUMN "MT"."UNIT" IS '단위';
   COMMENT ON COLUMN "MT"."UNIT_PRICE" IS '단가';
   COMMENT ON COLUMN "MT"."SAFETY_STOCK" IS '안전재고';
   COMMENT ON COLUMN "MT"."COMM" IS '비고';
   COMMENT ON COLUMN "MT"."STC_CODE" IS '재고 코드';
   COMMENT ON COLUMN "MT"."UPDATE_DATE" IS '재고변동일';
   COMMENT ON COLUMN "MT"."CURRENT_STC" IS '현재재고';
   COMMENT ON COLUMN "MT"."PRD_CODE" IS '제품 코드
';
   COMMENT ON COLUMN "MT"."CP_CODE" IS '업체 코드';
   COMMENT ON TABLE "MT"  IS '자재';
--------------------------------------------------------
--  DDL for Table MTL_OD
--------------------------------------------------------

  CREATE TABLE "MTL_OD" 
   (	"MTL_OD_CODE" VARCHAR2(30 BYTE), 
	"MTL_OD_QUANTITY" NUMBER, 
	"MTL_OD_DATE" DATE DEFAULT SYSDATE, 
	"DILIVERY_DATE" DATE, 
	"PRICE" NUMBER, 
	"USER_ID" NUMBER, 
	"MTL_OD_STATUS" VARCHAR2(30 BYTE) DEFAULT '발주대기', 
	"COMM" VARCHAR2(100 BYTE), 
	"CP_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MTL_OD"."MTL_OD_CODE" IS '자재발주 코드';
   COMMENT ON COLUMN "MTL_OD"."MTL_OD_QUANTITY" IS '자재발주 수량';
   COMMENT ON COLUMN "MTL_OD"."MTL_OD_DATE" IS '자재발주 일자';
   COMMENT ON COLUMN "MTL_OD"."DILIVERY_DATE" IS '납기일';
   COMMENT ON COLUMN "MTL_OD"."PRICE" IS '금액';
   COMMENT ON COLUMN "MTL_OD"."USER_ID" IS '사용자번호';
   COMMENT ON COLUMN "MTL_OD"."MTL_OD_STATUS" IS '자재발주 상태';
   COMMENT ON COLUMN "MTL_OD"."COMM" IS '비고';
   COMMENT ON COLUMN "MTL_OD"."CP_CODE" IS '업체 코드';
   COMMENT ON TABLE "MTL_OD"  IS '자재발주';
--------------------------------------------------------
--  DDL for Table MTL_OD_DETAIL
--------------------------------------------------------

  CREATE TABLE "MTL_OD_DETAIL" 
   (	"MTL_OD_DETAIL_CODE" VARCHAR2(30 BYTE), 
	"MT_CODE" VARCHAR2(30 BYTE), 
	"QUANTITY" NUMBER, 
	"MTL_OD_CODE" VARCHAR2(30 BYTE), 
	"MTL_OD_DETAIL_STATUS" VARCHAR2(50 BYTE), 
	"MTL_OD_STATUS" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MTL_OD_DETAIL"."MTL_OD_DETAIL_CODE" IS '자재발주 상세 코드';
   COMMENT ON COLUMN "MTL_OD_DETAIL"."MT_CODE" IS '자재 코드';
   COMMENT ON COLUMN "MTL_OD_DETAIL"."QUANTITY" IS '수량';
   COMMENT ON COLUMN "MTL_OD_DETAIL"."MTL_OD_CODE" IS '자재발주 코드';
   COMMENT ON COLUMN "MTL_OD_DETAIL"."MTL_OD_DETAIL_STATUS" IS '자재발주 상세상태';
   COMMENT ON TABLE "MTL_OD_DETAIL"  IS '자재발주 상세';
--------------------------------------------------------
--  DDL for Table MT_IN
--------------------------------------------------------

  CREATE TABLE "MT_IN" 
   (	"INPUT_DATE" DATE, 
	"INQUANTITY" NUMBER, 
	"ED" DATE, 
	"IN_CODE" VARCHAR2(30 BYTE), 
	"USER_ID" NUMBER, 
	"MTL_OD_CODE" VARCHAR2(30 BYTE), 
	"INS_CODE" VARCHAR2(30 BYTE), 
	"MT_CODE" VARCHAR2(30 BYTE), 
	"CP_CODE" VARCHAR2(30 BYTE), 
	"COMM" VARCHAR2(500 BYTE), 
	"LOT_NO" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MT_IN"."INPUT_DATE" IS '입고일';
   COMMENT ON COLUMN "MT_IN"."INQUANTITY" IS '입고수량';
   COMMENT ON COLUMN "MT_IN"."ED" IS '유통기한';
   COMMENT ON COLUMN "MT_IN"."IN_CODE" IS '입고 코드';
   COMMENT ON COLUMN "MT_IN"."USER_ID" IS '사원 번호';
   COMMENT ON COLUMN "MT_IN"."MTL_OD_CODE" IS '자재발주 코드';
   COMMENT ON COLUMN "MT_IN"."INS_CODE" IS '품질검사 코드';
   COMMENT ON COLUMN "MT_IN"."MT_CODE" IS '자재 코드';
   COMMENT ON COLUMN "MT_IN"."CP_CODE" IS '업체 코드';
   COMMENT ON COLUMN "MT_IN"."COMM" IS '비고';
   COMMENT ON COLUMN "MT_IN"."LOT_NO" IS 'LOT번호';
   COMMENT ON TABLE "MT_IN"  IS '자재입고';
--------------------------------------------------------
--  DDL for Table MT_OUT
--------------------------------------------------------

  CREATE TABLE "MT_OUT" 
   (	"OUT_DATE" DATE, 
	"MT_OUT_COUNT" NUMBER, 
	"OUTPUT_TARGET" VARCHAR2(20 BYTE), 
	"OUT_CODE" VARCHAR2(30 BYTE), 
	"LOT_NO" VARCHAR2(30 BYTE), 
	"MT_CODE" VARCHAR2(30 BYTE), 
	"USER_ID" NUMBER, 
	"PDETAIL_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "MT_OUT"."OUT_DATE" IS '출고 일자';
   COMMENT ON COLUMN "MT_OUT"."MT_OUT_COUNT" IS '출고수량';
   COMMENT ON COLUMN "MT_OUT"."OUTPUT_TARGET" IS '출고처';
   COMMENT ON COLUMN "MT_OUT"."OUT_CODE" IS '출고 코드';
   COMMENT ON COLUMN "MT_OUT"."LOT_NO" IS 'LOT번호';
   COMMENT ON COLUMN "MT_OUT"."MT_CODE" IS '자재 코드';
   COMMENT ON COLUMN "MT_OUT"."USER_ID" IS '사용자번호';
   COMMENT ON COLUMN "MT_OUT"."PDETAIL_CODE" IS '생산지시 상세 코드';
   COMMENT ON TABLE "MT_OUT"  IS '자재 출고';
--------------------------------------------------------
--  DDL for Table ORD
--------------------------------------------------------

  CREATE TABLE "ORD" 
   (	"ORD_CODE" VARCHAR2(30 BYTE) DEFAULT NULL, 
	"DLV_REQ_DATE" DATE, 
	"ORD_STATUS" VARCHAR2(20 BYTE) DEFAULT '주문접수', 
	"COMM" VARCHAR2(100 BYTE), 
	"ORD_DATE" DATE, 
	"CP_CODE" VARCHAR2(30 BYTE), 
	"USER_ID" NUMBER, 
	"MANAGER" NUMBER, 
	"OUT_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "ORD"."ORD_CODE" IS '주문 코드';
   COMMENT ON COLUMN "ORD"."DLV_REQ_DATE" IS '납기요청일';
   COMMENT ON COLUMN "ORD"."ORD_STATUS" IS '주문상태';
   COMMENT ON COLUMN "ORD"."COMM" IS '비고';
   COMMENT ON COLUMN "ORD"."ORD_DATE" IS '주문 일자';
   COMMENT ON COLUMN "ORD"."CP_CODE" IS '업체 코드';
   COMMENT ON COLUMN "ORD"."USER_ID" IS '사용자번호';
   COMMENT ON TABLE "ORD"  IS '주문';
--------------------------------------------------------
--  DDL for Table ORD_DETAIL
--------------------------------------------------------

  CREATE TABLE "ORD_DETAIL" 
   (	"ORD_DETAIL_CODE" VARCHAR2(100 BYTE), 
	"UNIT_PRICE" NUMBER, 
	"ORD_QUANTITY" NUMBER, 
	"PRD_NAME" VARCHAR2(30 BYTE), 
	"PRICE" NUMBER, 
	"ORD_CODE" VARCHAR2(30 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "ORD_DETAIL"."ORD_DETAIL_CODE" IS '주문 상세 코드';
   COMMENT ON COLUMN "ORD_DETAIL"."UNIT_PRICE" IS '단가';
   COMMENT ON COLUMN "ORD_DETAIL"."ORD_QUANTITY" IS '주문량';
   COMMENT ON COLUMN "ORD_DETAIL"."PRD_NAME" IS '제품 이름';
   COMMENT ON COLUMN "ORD_DETAIL"."PRICE" IS '가격';
   COMMENT ON COLUMN "ORD_DETAIL"."ORD_CODE" IS '주문 코드';
   COMMENT ON COLUMN "ORD_DETAIL"."PRD_CODE" IS '제품 코드';
   COMMENT ON TABLE "ORD_DETAIL"  IS '주문 상세';
--------------------------------------------------------
--  DDL for Table PDETAIL
--------------------------------------------------------

  CREATE TABLE "PDETAIL" 
   (	"PDETAIL_CODE" VARCHAR2(30 BYTE), 
	"PRD_NAME" VARCHAR2(30 BYTE), 
	"WANT" NUMBER, 
	"COMMAND" NUMBER, 
	"OUTPUT" NUMBER DEFAULT 0, 
	"NO" NUMBER, 
	"PORDER_CODE" VARCHAR2(30 BYTE), 
	"STATUS" VARCHAR2(100 BYTE), 
	"LINE_CODE" VARCHAR2(40 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE), 
	"COMM" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PDETAIL"."PDETAIL_CODE" IS '생산지시상세 코드';
   COMMENT ON COLUMN "PDETAIL"."PRD_NAME" IS '제품 이름';
   COMMENT ON COLUMN "PDETAIL"."WANT" IS '목표량';
   COMMENT ON COLUMN "PDETAIL"."COMMAND" IS '지시량';
   COMMENT ON COLUMN "PDETAIL"."OUTPUT" IS '생산량';
   COMMENT ON COLUMN "PDETAIL"."NO" IS '우선순위';
   COMMENT ON COLUMN "PDETAIL"."PORDER_CODE" IS '생산지시 코드';
   COMMENT ON COLUMN "PDETAIL"."STATUS" IS '상태';
   COMMENT ON COLUMN "PDETAIL"."LINE_CODE" IS '라인 코드';
   COMMENT ON COLUMN "PDETAIL"."PRD_CODE" IS '제품 코드';
   COMMENT ON TABLE "PDETAIL"  IS '생산지시상세';
--------------------------------------------------------
--  DDL for Table PLAN
--------------------------------------------------------

  CREATE TABLE "PLAN" 
   (	"PLAN_CODE" VARCHAR2(30 BYTE), 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"MANAGER" NUMBER, 
	"COMM" VARCHAR2(100 BYTE), 
	"STATUS" VARCHAR2(4 BYTE), 
	"ORD_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PLAN"."PLAN_CODE" IS '생산계획 코드';
   COMMENT ON COLUMN "PLAN"."START_DATE" IS '시작 일자';
   COMMENT ON COLUMN "PLAN"."END_DATE" IS '종료 일자';
   COMMENT ON COLUMN "PLAN"."MANAGER" IS '담당자';
   COMMENT ON COLUMN "PLAN"."COMM" IS '비고';
   COMMENT ON COLUMN "PLAN"."STATUS" IS '상태';
   COMMENT ON COLUMN "PLAN"."ORD_CODE" IS '주문코드';
   COMMENT ON TABLE "PLAN"  IS '생산계획';
--------------------------------------------------------
--  DDL for Table PLAN_DETAIL
--------------------------------------------------------

  CREATE TABLE "PLAN_DETAIL" 
   (	"PLAN_DETAIL_CODE" VARCHAR2(30 BYTE), 
	"PRD_NAME" VARCHAR2(30 BYTE), 
	"QUANTITY" NUMBER, 
	"NO" NUMBER, 
	"PLAN_CODE" VARCHAR2(30 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PLAN_DETAIL"."PLAN_DETAIL_CODE" IS '생산계획 상세 코드';
   COMMENT ON COLUMN "PLAN_DETAIL"."PRD_NAME" IS '제품 이름';
   COMMENT ON COLUMN "PLAN_DETAIL"."QUANTITY" IS '수량';
   COMMENT ON COLUMN "PLAN_DETAIL"."NO" IS '우선순위';
   COMMENT ON COLUMN "PLAN_DETAIL"."PLAN_CODE" IS '생산계획 코드';
   COMMENT ON COLUMN "PLAN_DETAIL"."PRD_CODE" IS '제품 코드';
   COMMENT ON TABLE "PLAN_DETAIL"  IS '생산계획 상세';
--------------------------------------------------------
--  DDL for Table PORDER
--------------------------------------------------------

  CREATE TABLE "PORDER" 
   (	"PORDER_CODE" VARCHAR2(30 BYTE), 
	"START_DATE" DATE, 
	"PORDER_DATE" DATE, 
	"MANAGER" VARCHAR2(30 BYTE), 
	"COMM" VARCHAR2(100 BYTE), 
	"STATUS" VARCHAR2(100 BYTE), 
	"PLAN_CODE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PORDER"."PORDER_CODE" IS '생산지시 코드';
   COMMENT ON COLUMN "PORDER"."START_DATE" IS '생산 일자';
   COMMENT ON COLUMN "PORDER"."PORDER_DATE" IS '생산지시 일자';
   COMMENT ON COLUMN "PORDER"."MANAGER" IS '담당자';
   COMMENT ON COLUMN "PORDER"."COMM" IS '비고';
   COMMENT ON COLUMN "PORDER"."STATUS" IS '상태';
   COMMENT ON COLUMN "PORDER"."PLAN_CODE" IS '생산계획 코드';
   COMMENT ON TABLE "PORDER"  IS '생산지시';
--------------------------------------------------------
--  DDL for Table PRD
--------------------------------------------------------

  CREATE TABLE "PRD" 
   (	"PRD_CODE" VARCHAR2(30 BYTE), 
	"COMM" VARCHAR2(500 BYTE), 
	"PRD_NAME" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(500 BYTE), 
	"UNIT_PRICE" NUMBER, 
	"BOM_CODE" VARCHAR2(30 BYTE), 
	"REGISTRATION_DATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PRD"."PRD_CODE" IS '제품 코드';
   COMMENT ON COLUMN "PRD"."COMM" IS '비고';
   COMMENT ON COLUMN "PRD"."PRD_NAME" IS '제품 이름';
   COMMENT ON COLUMN "PRD"."DESCRIPTION" IS '설명';
   COMMENT ON COLUMN "PRD"."UNIT_PRICE" IS '단가';
   COMMENT ON TABLE "PRD"  IS '제품';
--------------------------------------------------------
--  DDL for Table PRD_MANAGEMENT
--------------------------------------------------------

  CREATE TABLE "PRD_MANAGEMENT" 
   (	"PRD_CODE" VARCHAR2(30 BYTE), 
	"LOT" VARCHAR2(30 BYTE), 
	"MD" DATE, 
	"ED" DATE, 
	"IN_QUANTITY" NUMBER, 
	"OUT_QUANTITY" NUMBER DEFAULT 0, 
	"INS_CODE" VARCHAR2(30 BYTE), 
	"STC_QUANTITY" NUMBER GENERATED ALWAYS AS ("IN_QUANTITY"-"OUT_QUANTITY") VIRTUAL VISIBLE , 
	"IN_DATE" DATE DEFAULT SYSDATE, 
	"IN_OUT_TYPE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PRD_MANAGEMENT"."PRD_CODE" IS '완제품 코드';
   COMMENT ON COLUMN "PRD_MANAGEMENT"."LOT" IS 'LOT';
   COMMENT ON COLUMN "PRD_MANAGEMENT"."MD" IS '제조일자';
   COMMENT ON COLUMN "PRD_MANAGEMENT"."ED" IS '유통기한';
   COMMENT ON COLUMN "PRD_MANAGEMENT"."IN_QUANTITY" IS '입고 수량';
   COMMENT ON COLUMN "PRD_MANAGEMENT"."OUT_QUANTITY" IS '출고 수량';
   COMMENT ON COLUMN "PRD_MANAGEMENT"."INS_CODE" IS '품질검사 코드';
   COMMENT ON TABLE "PRD_MANAGEMENT"  IS '완제품 LOT';
--------------------------------------------------------
--  DDL for Table PRD_OUT_HISTORY
--------------------------------------------------------

  CREATE TABLE "PRD_OUT_HISTORY" 
   (	"OUT_NO" NUMBER, 
	"LOT" VARCHAR2(30 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE), 
	"PRD_NAME" VARCHAR2(30 BYTE), 
	"OUT_QUANTITY" NUMBER, 
	"OUT_DATE" DATE, 
	"CP_NAME" VARCHAR2(30 BYTE), 
	"CP_CODE" VARCHAR2(30 BYTE), 
	"ORD_CODE" VARCHAR2(30 BYTE), 
	"MANAGER" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PRD_OUT_HISTORY"."OUT_NO" IS '출고번호';
   COMMENT ON COLUMN "PRD_OUT_HISTORY"."LOT" IS 'LOT';
   COMMENT ON COLUMN "PRD_OUT_HISTORY"."PRD_CODE" IS '완제품 코드';
   COMMENT ON COLUMN "PRD_OUT_HISTORY"."PRD_NAME" IS '제품 이름';
   COMMENT ON COLUMN "PRD_OUT_HISTORY"."OUT_QUANTITY" IS '출고량';
   COMMENT ON COLUMN "PRD_OUT_HISTORY"."OUT_DATE" IS '출고 일자';
   COMMENT ON COLUMN "PRD_OUT_HISTORY"."CP_NAME" IS '업체 이름';
   COMMENT ON COLUMN "PRD_OUT_HISTORY"."CP_CODE" IS '업체 코드';
   COMMENT ON COLUMN "PRD_OUT_HISTORY"."ORD_CODE" IS '주문 코드';
   COMMENT ON TABLE "PRD_OUT_HISTORY"  IS '완제품 출고내역';
--------------------------------------------------------
--  DDL for Table PRESULT
--------------------------------------------------------

  CREATE TABLE "PRESULT" 
   (	"PRESULT_CODE" VARCHAR2(30 BYTE), 
	"PRD_CODE" VARCHAR2(30 BYTE), 
	"START_TIME" VARCHAR2(30 BYTE), 
	"END_TIME" VARCHAR2(30 BYTE), 
	"OUTPUT" NUMBER, 
	"ERR" NUMBER, 
	"PROCESS_DATE" DATE, 
	"EQ_CODE" VARCHAR2(30 BYTE), 
	"PROCESS_NAME" VARCHAR2(30 BYTE), 
	"MANAGER" VARCHAR2(30 BYTE), 
	"PDETAIL_CODE" VARCHAR2(30 BYTE), 
	"LDETAIL_CODE" VARCHAR2(30 BYTE), 
	"INPUT" NUMBER, 
	"STATUS" VARCHAR2(30 BYTE), 
	"NO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PRESULT"."PRESULT_CODE" IS '생산공정실적 코드';
   COMMENT ON COLUMN "PRESULT"."PRD_CODE" IS '제품 코드';
   COMMENT ON COLUMN "PRESULT"."START_TIME" IS '시작 시간';
   COMMENT ON COLUMN "PRESULT"."END_TIME" IS '종료 시간';
   COMMENT ON COLUMN "PRESULT"."OUTPUT" IS '생산량';
   COMMENT ON COLUMN "PRESULT"."ERR" IS '불량량';
   COMMENT ON COLUMN "PRESULT"."PROCESS_DATE" IS '공정 일자';
   COMMENT ON COLUMN "PRESULT"."EQ_CODE" IS '설비 코드';
   COMMENT ON COLUMN "PRESULT"."PROCESS_NAME" IS '공정 이름';
   COMMENT ON COLUMN "PRESULT"."MANAGER" IS '담당자';
   COMMENT ON COLUMN "PRESULT"."PDETAIL_CODE" IS '생산지시상세 코드';
   COMMENT ON COLUMN "PRESULT"."LDETAIL_CODE" IS '라인상세정보 코드';
   COMMENT ON COLUMN "PRESULT"."INPUT" IS '투입량';
   COMMENT ON COLUMN "PRESULT"."STATUS" IS '상태';
   COMMENT ON COLUMN "PRESULT"."NO" IS '순번';
   COMMENT ON TABLE "PRESULT"  IS '생산공정실적';
--------------------------------------------------------
--  DDL for Table PROCESS
--------------------------------------------------------

  CREATE TABLE "PROCESS" 
   (	"PROCESS_NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(50 BYTE), 
	"COMM" VARCHAR2(500 BYTE), 
	"PROCESS_CODE" VARCHAR2(30 BYTE), 
	"PROCESS_TYPE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "PROCESS"."PROCESS_NAME" IS '공정 이름';
   COMMENT ON COLUMN "PROCESS"."DESCRIPTION" IS '설명';
   COMMENT ON COLUMN "PROCESS"."COMM" IS '비고';
   COMMENT ON COLUMN "PROCESS"."PROCESS_CODE" IS '공정 코드';
   COMMENT ON COLUMN "PROCESS"."PROCESS_TYPE" IS '공정 구분';
   COMMENT ON TABLE "PROCESS"  IS '공정';
--------------------------------------------------------
--  DDL for Table SJC_ROLE
--------------------------------------------------------

  CREATE TABLE "SJC_ROLE" 
   (	"ROLE_ID" NUMBER, 
	"ROLE_NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "SJC_ROLE"."ROLE_ID" IS '권한번호';
   COMMENT ON COLUMN "SJC_ROLE"."DESCRIPTION" IS '설명';
   COMMENT ON TABLE "SJC_ROLE"  IS '권한';
--------------------------------------------------------
--  DDL for Table SJC_USER
--------------------------------------------------------

  CREATE TABLE "SJC_USER" 
   (	"USER_ID" NUMBER, 
	"LOGIN_ID" VARCHAR2(20 BYTE), 
	"PASSWORD" VARCHAR2(100 BYTE), 
	"USER_NAME" VARCHAR2(100 BYTE), 
	"PHONE" VARCHAR2(100 BYTE), 
	"DEPT_CODE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "SJC_USER"."USER_ID" IS '사용자번호';
   COMMENT ON COLUMN "SJC_USER"."LOGIN_ID" IS '아이디';
   COMMENT ON COLUMN "SJC_USER"."PASSWORD" IS '비밀번호';
   COMMENT ON COLUMN "SJC_USER"."USER_NAME" IS '사용자이름';
   COMMENT ON COLUMN "SJC_USER"."PHONE" IS '전화번호';
   COMMENT ON COLUMN "SJC_USER"."DEPT_CODE" IS '부서 코드';
   COMMENT ON TABLE "SJC_USER"  IS '사용자';
--------------------------------------------------------
--  DDL for Table STC_HIST
--------------------------------------------------------

  CREATE TABLE "STC_HIST" 
   (	"STC_HIST_CODE" NUMBER, 
	"IN_OUT_TYPE" VARCHAR2(100 BYTE), 
	"EVENT_DATE" TIMESTAMP (6) DEFAULT SYSTIMESTAMP, 
	"QUANTITY" NUMBER, 
	"WORKER" VARCHAR2(20 BYTE), 
	"COMM" VARCHAR2(500 BYTE), 
	"REASON" VARCHAR2(100 BYTE), 
	"OUT_CODE" VARCHAR2(30 BYTE), 
	"USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "STC_HIST"."STC_HIST_CODE" IS '재고이력 코드';
   COMMENT ON COLUMN "STC_HIST"."IN_OUT_TYPE" IS '입출고구분';
   COMMENT ON COLUMN "STC_HIST"."EVENT_DATE" IS '발생 일자';
   COMMENT ON COLUMN "STC_HIST"."QUANTITY" IS '수량';
   COMMENT ON COLUMN "STC_HIST"."WORKER" IS '작업자';
   COMMENT ON COLUMN "STC_HIST"."COMM" IS '비고';
   COMMENT ON COLUMN "STC_HIST"."REASON" IS '사유';
   COMMENT ON COLUMN "STC_HIST"."OUT_CODE" IS '출고 코드';
   COMMENT ON COLUMN "STC_HIST"."USER_ID" IS '사용자번호';
   COMMENT ON TABLE "STC_HIST"  IS '재고이력';
--------------------------------------------------------
--  DDL for Table TEST_EQ_LOG
--------------------------------------------------------

  CREATE TABLE "TEST_EQ_LOG" 
   (	"EQ_LOG_ID" NUMBER, 
	"EQ_CODE" VARCHAR2(100 BYTE), 
	"EQ_NAME" VARCHAR2(100 BYTE), 
	"EQ_LOG_DATA" NUMBER DEFAULT 0, 
	"EQ_LOG_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table USER_HISTORY
--------------------------------------------------------

  CREATE TABLE "USER_HISTORY" 
   (	"HISTORY_ID" NUMBER, 
	"USER_ID" NUMBER, 
	"LOGIN_ID" VARCHAR2(20 BYTE), 
	"PASSWORD" VARCHAR2(100 BYTE), 
	"USER_NAME" VARCHAR2(100 BYTE), 
	"PHONE" VARCHAR2(100 BYTE), 
	"DEPT_CODE" VARCHAR2(100 BYTE), 
	"CREATED_DATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table USER_ROLE
--------------------------------------------------------

  CREATE TABLE "USER_ROLE" 
   (	"USER_ID" NUMBER, 
	"ROLE_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "USER_ROLE"."USER_ID" IS '사용자번호';
   COMMENT ON COLUMN "USER_ROLE"."ROLE_ID" IS '권한번호';
   COMMENT ON TABLE "USER_ROLE"  IS '사용자권한';
REM INSERTING into BOM
SET DEFINE OFF;
Insert into BOM (BOM_CODE,REG_DATE,DESCRIPTION,COMM,MANAGER,PRD_CODE) values ('B202411090002',to_date('24/11/09','RR/MM/DD'),'카카오 콜라보 계절상품',null,'김동훈','BAR02');
Insert into BOM (BOM_CODE,REG_DATE,DESCRIPTION,COMM,MANAGER,PRD_CODE) values ('B202411080002',to_date('24/11/08','RR/MM/DD'),'승주바 초코맛',null,'김동훈','BAR01');
Insert into BOM (BOM_CODE,REG_DATE,DESCRIPTION,COMM,MANAGER,PRD_CODE) values ('B202411090001',to_date('24/11/09','RR/MM/DD'),'흑백요리사 프로모션',null,'김동훈','CON02');
Insert into BOM (BOM_CODE,REG_DATE,DESCRIPTION,COMM,MANAGER,PRD_CODE) values ('B202411080001',to_date('24/11/08','RR/MM/DD'),'승주콘 2024년 신상품',null,'김동훈','CON01');
REM INSERTING into B_DETAIL
SET DEFINE OFF;
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411090005',1,null,'B202411090002','MT003',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411090006',20,null,'B202411090002','MT004',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411080004',15,null,'B202411080002','MT004',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411080005',1,null,'B202411080002','MT005',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411090001',10,null,'B202411090001','MT001',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411090002',10,null,'B202411090001','MT002',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411090003',1,null,'B202411090001','MT003',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411090004',10,null,'B202411090001','MT004',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411120001',10,null,'B202411120001','MT011',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411080001',10,null,'B202411080001','MT001',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411080002',10,null,'B202411080001','MT002',null);
Insert into B_DETAIL (B_DETAIL_CODE,QUANTITY_REQUIRED,COMM,BOM_CODE,MT_CODE,NO) values ('BD202411080003',1,null,'B202411080001','MT003',null);
REM INSERTING into COMM_CODE
SET DEFINE OFF;
REM INSERTING into CP
SET DEFINE OFF;
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP02','제일제당','사업자02','대구 광역시 동구 동촌로274',null,'자재','053-111-4567',to_date('24/11/10','RR/MM/DD'));
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP03','풀무원','사업자03','성당동 대명철로12길 3',null,'자재','053-222-2222',to_date('24/11/10','RR/MM/DD'));
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP04','청정원','사업자04','법안로 40 범물청아타운 201동 1508',null,'자재','053-123-4567',to_date('24/11/10','RR/MM/DD'));
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP05','롯데제과','사업자05','서한 포레스트',null,'자재','053-000-4567',to_date('24/11/10','RR/MM/DD'));
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP06','승자재','사업자06','반도유보라',null,'자재','053-123-3333',to_date('24/11/10','RR/MM/DD'));
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP01','오뚜기','사업자01','대구 광역시 동구 반야월북로 221','테스트중입니다.','완제품','053-555-4567',to_date('24/11/10','RR/MM/DD'));
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP09','빙그레','123-132-123','대구 중구','토스트','완제품','053-123-7777',to_date('24/11/10','RR/MM/DD'));
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP07','칠성','123-123-123','대구 동구','강소기업','완제품','053-123-8888',to_date('24/11/10','RR/MM/DD'));
Insert into CP (CP_CODE,CP_NAME,BUSINESS_NO,ADDRESS,COMM,CP_TYPE,TEL,CP_DATE) values ('CP08','해태','12323142','대구','111','완제품','053-999-4567',to_date('24/11/10','RR/MM/DD'));
REM INSERTING into DEF
SET DEFINE OFF;
REM INSERTING into DEPARTMENT
SET DEFINE OFF;
Insert into DEPARTMENT (DEPT_CODE,DEPT_NAME) values ('IT','전산');
Insert into DEPARTMENT (DEPT_CODE,DEPT_NAME) values ('EQ','설비');
Insert into DEPARTMENT (DEPT_CODE,DEPT_NAME) values ('PR','생산');
Insert into DEPARTMENT (DEPT_CODE,DEPT_NAME) values ('MT','자재');
Insert into DEPARTMENT (DEPT_CODE,DEPT_NAME) values ('QA','품질');
Insert into DEPARTMENT (DEPT_CODE,DEPT_NAME) values ('SA','영업');
REM INSERTING into EQ
SET DEFINE OFF;
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110004','TEST1_3','Y','1',null,null,null,null,3,'정현우','sul7.jpg','L01','포장기','콘 포장기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110009','TEST2_3','Y','2',null,-150,-200,null,3,'정현우','sul8.jpg','L02','냉각기','콘 냉각기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110012','TEST3','Y','3',null,-30,-100,null,3,'정현우','sul1.jpg','L03','배합기','바 배합기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110020','TEST4_1','Y','4',null,-50,-100,null,3,'정현우','sul2.jpg','L04','배합기','바 배합기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110006','TEST2','Y','2',null,-30,-100,null,3,'정현우','sul1.jpg','L02','배합기','콘 배합기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110008','TEST2_2','Y','2',null,-50,-100,null,3,'정현우','sul7.jpg','L02','성형기','콘 성형기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110010','TEST2_4','Y','2',null,null,null,null,3,'정현우','sul6.jpg','L02','포장기','콘 포장기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110011','TEST2_5','Y','2',null,null,null,null,3,'정현우','sul6.jpg','L02','포장기','콘 포장기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110013','TEST3_1','Y','3',null,-30,-50,null,3,'정현우','sul1.jpg','L03','배합기','바 배합기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110014','TEST3_2','Y','3',null,-50,-100,null,3,'정현우','sul2.jpg','L03','성형기','바 성형기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110015','TEST3_3','Y','3',null,-150,-200,null,3,'정현우','sul8.jpg','L03','냉각기','바 냉각기',to_date('24/11/11','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110016','TEST3_4','Y','3',null,null,null,null,3,'정현우','sul10.jpg','L03','포장기','바 포장기',to_date('24/11/11','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110007','TEST2_1','Y','2',null,-30,-100,null,3,'정현우','sul3.jpg','L02','배합기','콘 배합기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110017','TEST3_5','Y','3',null,null,null,null,3,'정현우','sul9.jpg','L03','포장기','바 포장기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110018','TEST3_6','Y','3',null,null,null,null,3,'정현우','sul7.jpg','L03','포장기','바 포장기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110019','TEST4','Y','4',null,-30,-50,null,3,'정현우','sul2.jpg','L04','배합기','바 배합기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110021','TEST4_2','Y','4',null,-30,-80,null,3,'정현우','sul3.jpg','L04','성형기','바 성형기',to_date('24/11/11','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110022','TEST4_3','Y','4',null,-150,-200,null,3,'정현우','sul8.jpg','L04','냉각기','바 냉각기',to_date('24/11/11','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110023','TEST4_4','Y','4',null,null,null,null,3,'정현우','sul7.jpg','L04','포장기','바 포장기',to_date('24/11/12','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110001','TEST1','Y','1',null,-30,-105,null,3,'정현우','sul1.jpg','L01','배합기','콘 배합기',to_date('24/11/12','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110002','TEST1_1','Y','1',null,-30,-105,null,3,'정현우','sul2.jpg','L01','성형기','콘 성형기',to_date('24/11/12','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110003','TEST1_2','Y','1',null,-100,-200,null,3,'정현우','sul3.jpg','L01','냉각기','콘 냉각기',to_date('24/11/12','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411110005','TEST1_4','Y','1',null,null,null,null,3,'정현우','sul8.jpg','L01','포장기','콘 포장기',to_date('24/11/11','RR/MM/DD'),null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411130001','TEST15','N','15',null,-50,-100,null,3,'정현우','sul7.jpg','대기','배합기','바 배합기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411130002','TEST16','N','16',null,-80,-100,null,3,'정현우',null,'대기','성형기','바 성형기',null,null,null);
Insert into EQ (EQ_CODE,EQ_MDNM,USE,EQ_MDNO,EQ_TEMP,EQ_MIN,EQ_MAX,EQ_STANDTEMP,EQ_PERIOD,MANAGER,EQ_IMG,LINE_CODE,EQ_TYPE,EQ_NAME,EQ_CKDATE,DESCRIPTION,USER_ID) values ('E202411130003','TEST17','N','17',null,-50,-100,null,3,'정현우','sul8.jpg','대기','냉각기','콘 냉각기',null,null,null);
REM INSERTING into EQ_CHCK
SET DEFINE OFF;
Insert into EQ_CHCK (EQ_CHCK_OPCD,EQ_CODE,EQ_NEXTCHCK,EQ_CHCKOX,START_DATE,END_DATE,REASON,COMM) values ('O202411130003','E202411130003',null,null,to_date('24/12/13','RR/MM/DD'),to_date('24/12/25','RR/MM/DD'),'임시점검',null);
Insert into EQ_CHCK (EQ_CHCK_OPCD,EQ_CODE,EQ_NEXTCHCK,EQ_CHCKOX,START_DATE,END_DATE,REASON,COMM) values ('O202411120002','E202411110002',to_date('25/02/12','RR/MM/DD'),'점검완료',to_date('24/11/11','RR/MM/DD'),null,'고장',null);
Insert into EQ_CHCK (EQ_CHCK_OPCD,EQ_CODE,EQ_NEXTCHCK,EQ_CHCKOX,START_DATE,END_DATE,REASON,COMM) values ('O202411120001','E202411110001',to_date('25/02/12','RR/MM/DD'),'점검완료',to_date('24/11/12','RR/MM/DD'),null,'임시점검',null);
Insert into EQ_CHCK (EQ_CHCK_OPCD,EQ_CODE,EQ_NEXTCHCK,EQ_CHCKOX,START_DATE,END_DATE,REASON,COMM) values ('O202411120003','E202411110001',to_date('25/02/12','RR/MM/DD'),'점검완료',null,null,null,null);
Insert into EQ_CHCK (EQ_CHCK_OPCD,EQ_CODE,EQ_NEXTCHCK,EQ_CHCKOX,START_DATE,END_DATE,REASON,COMM) values ('O202411130001','E202411130001',null,null,to_date('24/11/13','RR/MM/DD'),to_date('24/11/18','RR/MM/DD'),'임시점검',null);
Insert into EQ_CHCK (EQ_CHCK_OPCD,EQ_CODE,EQ_NEXTCHCK,EQ_CHCKOX,START_DATE,END_DATE,REASON,COMM) values ('O202411130002','E202411130002',null,null,to_date('24/11/28','RR/MM/DD'),to_date('24/12/11','RR/MM/DD'),'임시점검',null);
REM INSERTING into FLOW
SET DEFINE OFF;
Insert into FLOW (NO,FLOW_CODE,PROCESS_CODE,PRD_CODE) values (1,'F01','PRC01',null);
Insert into FLOW (NO,FLOW_CODE,PROCESS_CODE,PRD_CODE) values (2,'F01','PRC02',null);
Insert into FLOW (NO,FLOW_CODE,PROCESS_CODE,PRD_CODE) values (3,'F01','PRC03',null);
Insert into FLOW (NO,FLOW_CODE,PROCESS_CODE,PRD_CODE) values (4,'F01','PRC04',null);
REM INSERTING into INSPECTION
SET DEFINE OFF;
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120323',10,'관리자',null,4,4,0,'합격',118,'PD202411120324');
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120328',102,'조수호','MTLD241112178',5,5,0,'합격',150,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120329',102,'조수호',null,4,4,0,'합격',113,'PD202411120326');
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/13','RR/MM/DD'),'검사완료','INS202411130331',107,'테스터','MTLD241113181',3,3,0,'합격',500,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/13','RR/MM/DD'),'검사완료','INS202411130332',107,'테스터','MTLD241113180',3,3,0,'합격',100,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120322',10,'관리자','MTLD241112173',3,3,0,'합격',3000,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120319',100,'사용자','MTLD241112171',3,3,0,'합격',3000,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120320',100,'사용자',null,4,4,0,'합격',99,'PD202411120323');
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120321',10,'관리자','MTLD241112174',5,5,0,'합격',3000,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120324',102,'조수호','MTLD241112176',5,5,0,'합격',3000,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120325',102,'조수호','MTLD241112175',3,3,0,'합격',3000,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120326',102,'조수호',null,4,4,0,'합격',113,'PD202411120325');
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120318',100,'사용자','MTLD241112172',5,5,0,'합격',3000,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사중','INS202411120330',null,null,'MTLD241112179',null,null,null,null,null,null);
Insert into INSPECTION (INS_DATE,INS_STATUS,INS_CODE,USER_ID,USER_NAME,MTL_OD_DETAIL_CODE,NUMBER_OF_TESTS,NUMBER_OF_PASSES,NUMBER_OF_FAILED,TOTAL_PASS,NUMBER_OF_TOTAL_PASS,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),'검사완료','INS202411120327',102,'조수호','MTLD241112177',3,3,0,'합격',3000,null);
REM INSERTING into INS_DETAIL
SET DEFINE OFF;
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120708','B3','5','합격','INS202411120329');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120709','B1','5','합격','INS202411120329');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120710','B4','5','합격','INS202411120329');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120711','B2','5','합격','INS202411120329');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411130717','C2','1','합격','INS202411130331');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411130718','C3','1','합격','INS202411130331');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411130719','C1','1','합격','INS202411130331');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120703','A1','2','합격','INS202411120328');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120704','A2','5','합격','INS202411120328');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120705','A3','5','합격','INS202411120328');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120706','A4','5','합격','INS202411120328');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120707','A5','1','합격','INS202411120328');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411130720','Z1','1','합격','INS202411130332');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411130721','Z2','1','합격','INS202411130332');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411130722','Z3','1','합격','INS202411130332');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120700','C2','1','합격','INS202411120327');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120701','C3','1','합격','INS202411120327');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120702','C1','1','합격','INS202411120327');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120712',null,null,null,'INS202411120330');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120713',null,null,null,'INS202411120330');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120714',null,null,null,'INS202411120330');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120715',null,null,null,'INS202411120330');
Insert into INS_DETAIL (INS_DETAIL_CODE,INS_ITEM_CODE,INS_VALUE,INS_RESULT,INS_CODE) values ('INSD202411120716',null,null,null,'INS202411120330');
REM INSERTING into INS_ITEM
SET DEFINE OFF;
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('S1','산도','0.18 이하(젖산으로서)(%)',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('B3','대장균군','n=5, c=2, m=10, M=100','n=5, c=2, m=10, M=100');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('A1','산가','<= 2.0','<= 2.0');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('A2','세균수','n=5, c=2, m=10,000, M=50,000','n=5, c=2, m=10,000, M=50,000');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('A3','황색포도상구균','n=5, c=0, m=0/10g','n=5, c=0, m=0/10g');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('A4','살모넬라','n=5, c=0, m=0/10g','n=5, c=0, m=0/10g');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('A5','총 아플라톡신','<= 15.0(㎍/㎏)','<= 15.0(㎍/㎏)');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('B1','유지방','>= 6.0 (%)','>= 6.0 (%)');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('B4','리스테리아 모노사이토제네스','n=5, c=0, m=0/25g','n=5, c=0, m=0/25g');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('C2','살모넬라','n=5, c=0, m=0/25 g','n=5, c=0, m=0/25 g');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('C3','허용외 타르색소','미검출','미검출');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('S2','유지방','3.0 이상(다만, 저지방제품은 0.6∼2.6, 무지방제품은 0.5 이하)(%)',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('D1','성상','무색∼갈색의 단맛을 가진 결정, 결정성 분말, 덩어리 형태','무색∼갈색의 단맛을 가진 결정, 결정성 분말, 덩어리 형태');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('D2','당도','>= 99.7 (%)','>= 99.7 (%)');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('D3','사카린나트륨','미검출','미검출');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('D4','납','<= 0.5 (mg/kg)','<= 0.5 (mg/kg)');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('D5','이산화황','< 0.020 (g/kg)','< 0.020 (g/kg)');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('E1','타르색소','미검출','미검출');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('E2','보존료','<= 1.0 (g/kg)(소브산, 안식향산, 파라옥시안식향산, 프로피온산)','<= 1.0 (g/kg)(소브산, 안식향산, 파라옥시안식향산, 프로피온산)');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('E3','납','<= 1.0 (mg/kg)','<= 1.0 (mg/kg)');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('S3','세균수','n=5, c=2, m=10,000, M=50,000',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('S4','대장균군','n=5, c=2, m=0, M=10',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('S5','포스파타제','음성',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('S6','살모넬라','n=5, c=0, m=0/25g',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('S7','리스테리아 모노사이토제네스','n=5, c=0, m=0/25g',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('S8','황색포도상구균','n=5, c=0, m=0/25g',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('B2','세균수','n=5, c=2, m=10,000, M=50,000','n=5, c=2, m=10,000, M=50,000');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('C1','세균수','n=5, c=2, m=10,000, M=50,000','n=5, c=2, m=10,000, M=50,000');
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('Z1','흠집','3개 이하',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('Z2','파손','없음',null);
Insert into INS_ITEM (INS_ITEM_CODE,INS_ITEM_NAME,INS_ITEM_CITERIA,INS_ITEM_COMM) values ('Z3','습도','<= 12%',null);
REM INSERTING into INS_MAP
SET DEFINE OFF;
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT001','D1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT001','D2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT001','D3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT001','D4');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT001','D5');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT002','S1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT002','S2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT002','S3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT002','S4');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT002','S5');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT002','S6');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT002','S7');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT002','S8');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT003','A1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT003','A2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT003','A3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT003','A4');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT003','A5');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT004','C1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT004','C2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT004','C3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT005','Z1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT005','Z2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT005','Z3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT006','D1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT006','D2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT006','D3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT006','D4');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT006','D5');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT007','S1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT007','S2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT007','S3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT007','S4');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT007','S5');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT007','S6');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT007','S7');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT007','S8');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT008','A1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT008','A2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT008','A3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT008','A4');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT008','A5');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT009','C1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT009','C2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT009','C3');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT010','Z1');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT010','Z2');
Insert into INS_MAP (MT_CODE,INS_ITEM_CODE) values ('MT010','Z3');
REM INSERTING into INS_PRD_MAP
SET DEFINE OFF;
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B1','BAR01');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B1','BAR02');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B1','CON01');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B1','CON02');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B2','BAR01');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B2','BAR02');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B2','CON01');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B2','CON02');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B3','BAR01');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B3','BAR02');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B3','CON01');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B3','CON02');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B4','BAR01');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B4','BAR02');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B4','CON01');
Insert into INS_PRD_MAP (INS_ITEM_CODE,PRD_CODE) values ('B4','CON02');
REM INSERTING into INS_TYPE
SET DEFINE OFF;
REM INSERTING into LDETAIL
SET DEFINE OFF;
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L01','E202411110001','LD01','F01',1);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L01','E202411110002','LD02','F01',2);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L01','E202411110003','LD03','F01',3);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L01','E202411110004','LD04','F01',4);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L02','E202411110006','LD05','F01',1);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L02','E202411110008','LD06','F01',2);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L02','E202411110009','LD07','F01',3);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L02','E202411110010','LD08','F01',4);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L03','E202411110012','LD09','F01',1);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L03','E202411110014','LD10','F01',2);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L03','E202411110010','LD11','F01',3);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L03','E202411110015','LD12','F01',4);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L04','E202411110019','LD13','F01',1);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L04','E202411110021','LD14','F01',2);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L04','E202411110022','LD15','F01',3);
Insert into LDETAIL (LINE_CODE,EQ_CODE,LDETAIL_CODE,FLOW_CODE,NO) values ('L04','E202411110023','LD16','F01',4);
REM INSERTING into LD_MANAGER
SET DEFINE OFF;
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD01',101);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD01',102);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD02',103);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD05',102);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD05',103);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD06',104);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD06',105);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD07',106);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD07',107);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD08',101);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD08',100);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD09',101);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD09',102);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD10',103);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD10',104);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD11',105);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD11',106);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD12',106);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD12',105);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD13',101);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD13',102);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD14',103);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD14',104);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD15',105);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD15',106);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD16',104);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD16',105);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD02',104);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD03',105);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD03',106);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD04',101);
Insert into LD_MANAGER (LDETAIL_CODE,USER_ID) values ('LD04',102);
REM INSERTING into LINE
SET DEFINE OFF;
Insert into LINE (LINE_CODE,USE,PRD_CODE,LINE_NAME,LINE_DATE) values ('L01','Y','CON01','생산1팀',to_date('24/11/11','RR/MM/DD'));
Insert into LINE (LINE_CODE,USE,PRD_CODE,LINE_NAME,LINE_DATE) values ('L03','U','BAR01','생산3팀',to_date('24/11/11','RR/MM/DD'));
Insert into LINE (LINE_CODE,USE,PRD_CODE,LINE_NAME,LINE_DATE) values ('L04','Y','BAR02','생산4팀',to_date('24/11/11','RR/MM/DD'));
Insert into LINE (LINE_CODE,USE,PRD_CODE,LINE_NAME,LINE_DATE) values ('L02','Y','CON02','생산2팀',to_date('24/11/11','RR/MM/DD'));
REM INSERTING into MT
SET DEFINE OFF;
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT006','흑설탕','당류','g','100g',11,4000,null,'st001',to_date('24/11/10','RR/MM/DD'),0,null,'CP02');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT007','딸기우유','유가공품류','ml','50ml',22,5000,null,'st002',to_date('24/11/10','RR/MM/DD'),0,null,'CP03');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT008','와플','과자류','pieces','1pieces',33,3000,null,'st003',to_date('24/11/10','RR/MM/DD'),0,null,'CP04');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT009','화이트초콜릿','초콜릿류','g','10g',44,1000,null,'st004',to_date('24/11/10','RR/MM/DD'),0,null,'CP05');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT010','대나무막대','부속자재','pieces','1pieces',55,2000,null,'st005',to_date('24/11/10','RR/MM/DD'),0,null,'CP06');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT001','설탕','당류','g','100g',50,4000,null,'st001',to_date('24/11/10','RR/MM/DD'),0,null,'CP02');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT002','우유','유가공품류','ml','50ml',100,5000,null,'st002',to_date('24/11/10','RR/MM/DD'),0,null,'CP03');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT003','콘','과자류','pieces','1pieces',150,3000,null,'st003',to_date('24/11/10','RR/MM/DD'),0,null,'CP04');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT004','초콜릿','초콜릿류','g','10g',200,1000,null,'st004',to_date('24/11/10','RR/MM/DD'),500,null,'CP05');
Insert into MT (MT_CODE,MT_NAME,MATERIAL_TYPE,SPECIFICATION,UNIT,UNIT_PRICE,SAFETY_STOCK,COMM,STC_CODE,UPDATE_DATE,CURRENT_STC,PRD_CODE,CP_CODE) values ('MT005','나무막대','부속자재','pieces','1pieces',50,2000,null,'st005',to_date('24/11/10','RR/MM/DD'),100,null,'CP06');
REM INSERTING into MTL_OD
SET DEFINE OFF;
Insert into MTL_OD (MTL_OD_CODE,MTL_OD_QUANTITY,MTL_OD_DATE,DILIVERY_DATE,PRICE,USER_ID,MTL_OD_STATUS,COMM,CP_CODE) values ('MTL241112208',null,to_date('24/11/12','RR/MM/DD'),null,null,102,'입고완료',null,'CP04');
Insert into MTL_OD (MTL_OD_CODE,MTL_OD_QUANTITY,MTL_OD_DATE,DILIVERY_DATE,PRICE,USER_ID,MTL_OD_STATUS,COMM,CP_CODE) values ('MTL241113210',null,to_date('24/11/13','RR/MM/DD'),null,null,107,'입고완료',null,'CP06');
Insert into MTL_OD (MTL_OD_CODE,MTL_OD_QUANTITY,MTL_OD_DATE,DILIVERY_DATE,PRICE,USER_ID,MTL_OD_STATUS,COMM,CP_CODE) values ('MTL241113211',null,to_date('24/11/13','RR/MM/DD'),null,null,107,'입고완료',null,'CP05');
Insert into MTL_OD (MTL_OD_CODE,MTL_OD_QUANTITY,MTL_OD_DATE,DILIVERY_DATE,PRICE,USER_ID,MTL_OD_STATUS,COMM,CP_CODE) values ('MTL241112206',null,to_date('24/11/12','RR/MM/DD'),null,null,102,'입고완료',null,'CP04');
Insert into MTL_OD (MTL_OD_CODE,MTL_OD_QUANTITY,MTL_OD_DATE,DILIVERY_DATE,PRICE,USER_ID,MTL_OD_STATUS,COMM,CP_CODE) values ('MTL241112205',null,to_date('24/11/12','RR/MM/DD'),null,null,102,'입고완료',null,'CP05');
Insert into MTL_OD (MTL_OD_CODE,MTL_OD_QUANTITY,MTL_OD_DATE,DILIVERY_DATE,PRICE,USER_ID,MTL_OD_STATUS,COMM,CP_CODE) values ('MTL241112207',null,to_date('24/11/12','RR/MM/DD'),null,null,102,'입고완료',null,'CP05');
Insert into MTL_OD (MTL_OD_CODE,MTL_OD_QUANTITY,MTL_OD_DATE,DILIVERY_DATE,PRICE,USER_ID,MTL_OD_STATUS,COMM,CP_CODE) values ('MTL241112209',null,to_date('24/11/12','RR/MM/DD'),null,null,107,'입고품질검사중',null,'CP04');
REM INSERTING into MTL_OD_DETAIL
SET DEFINE OFF;
Insert into MTL_OD_DETAIL (MTL_OD_DETAIL_CODE,MT_CODE,QUANTITY,MTL_OD_CODE,MTL_OD_DETAIL_STATUS,MTL_OD_STATUS) values ('MTLD241112178','MT003',150,'MTL241112208','개별입고품질검사완료','입고품질검사대기');
Insert into MTL_OD_DETAIL (MTL_OD_DETAIL_CODE,MT_CODE,QUANTITY,MTL_OD_CODE,MTL_OD_DETAIL_STATUS,MTL_OD_STATUS) values ('MTLD241113180','MT005',100,'MTL241113210','개별입고품질검사완료','입고품질검사대기');
Insert into MTL_OD_DETAIL (MTL_OD_DETAIL_CODE,MT_CODE,QUANTITY,MTL_OD_CODE,MTL_OD_DETAIL_STATUS,MTL_OD_STATUS) values ('MTLD241113181','MT004',500,'MTL241113211','개별입고품질검사완료','입고품질검사대기');
Insert into MTL_OD_DETAIL (MTL_OD_DETAIL_CODE,MT_CODE,QUANTITY,MTL_OD_CODE,MTL_OD_DETAIL_STATUS,MTL_OD_STATUS) values ('MTLD241112176','MT003',3000,'MTL241112206','개별입고품질검사완료','입고품질검사대기');
Insert into MTL_OD_DETAIL (MTL_OD_DETAIL_CODE,MT_CODE,QUANTITY,MTL_OD_CODE,MTL_OD_DETAIL_STATUS,MTL_OD_STATUS) values ('MTLD241112175','MT004',3000,'MTL241112205','개별입고품질검사완료','입고품질검사대기');
Insert into MTL_OD_DETAIL (MTL_OD_DETAIL_CODE,MT_CODE,QUANTITY,MTL_OD_CODE,MTL_OD_DETAIL_STATUS,MTL_OD_STATUS) values ('MTLD241112177','MT004',3000,'MTL241112207','개별입고품질검사완료','입고품질검사대기');
Insert into MTL_OD_DETAIL (MTL_OD_DETAIL_CODE,MT_CODE,QUANTITY,MTL_OD_CODE,MTL_OD_DETAIL_STATUS,MTL_OD_STATUS) values ('MTLD241112179','MT008',50,'MTL241112209','개별입고품질검사중','입고품질검사대기');
REM INSERTING into MT_IN
SET DEFINE OFF;
Insert into MT_IN (INPUT_DATE,INQUANTITY,ED,IN_CODE,USER_ID,MTL_OD_CODE,INS_CODE,MT_CODE,CP_CODE,COMM,LOT_NO) values (to_date('24/11/12','RR/MM/DD'),150,to_date('25/05/12','RR/MM/DD'),'IN202411120072',102,'MTL241112208','검사완료','MT003','CP04',null,'L202411120072');
Insert into MT_IN (INPUT_DATE,INQUANTITY,ED,IN_CODE,USER_ID,MTL_OD_CODE,INS_CODE,MT_CODE,CP_CODE,COMM,LOT_NO) values (to_date('24/11/13','RR/MM/DD'),500,to_date('25/05/13','RR/MM/DD'),'IN202411130074',107,'MTL241113211','검사완료','MT004','CP05',null,'L202411130074');
Insert into MT_IN (INPUT_DATE,INQUANTITY,ED,IN_CODE,USER_ID,MTL_OD_CODE,INS_CODE,MT_CODE,CP_CODE,COMM,LOT_NO) values (to_date('24/11/13','RR/MM/DD'),100,to_date('25/05/13','RR/MM/DD'),'IN202411130073',107,'MTL241113210','검사완료','MT005','CP06',null,'L202411130073');
Insert into MT_IN (INPUT_DATE,INQUANTITY,ED,IN_CODE,USER_ID,MTL_OD_CODE,INS_CODE,MT_CODE,CP_CODE,COMM,LOT_NO) values (to_date('24/11/12','RR/MM/DD'),3000,to_date('25/05/12','RR/MM/DD'),'IN202411120071',102,'MTL241112207','검사완료','MT004','CP05',null,'L202411120071');
REM INSERTING into MT_OUT
SET DEFINE OFF;
Insert into MT_OUT (OUT_DATE,MT_OUT_COUNT,OUTPUT_TARGET,OUT_CODE,LOT_NO,MT_CODE,USER_ID,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),150,'L04','OT202411122525','L202411120072','MT003',1,'PD202411120326');
Insert into MT_OUT (OUT_DATE,MT_OUT_COUNT,OUTPUT_TARGET,OUT_CODE,LOT_NO,MT_CODE,USER_ID,PDETAIL_CODE) values (to_date('24/11/12','RR/MM/DD'),3000,'L04','OT202411122526','L202411120071','MT004',1,'PD202411120326');
REM INSERTING into ORD
SET DEFINE OFF;
Insert into ORD (ORD_CODE,DLV_REQ_DATE,ORD_STATUS,COMM,ORD_DATE,CP_CODE,USER_ID,MANAGER,OUT_DATE) values ('ORD20241113004',to_date('24/11/14','RR/MM/DD'),'주문접수',null,to_date('24/11/13','RR/MM/DD'),'CP09',null,107,null);
Insert into ORD (ORD_CODE,DLV_REQ_DATE,ORD_STATUS,COMM,ORD_DATE,CP_CODE,USER_ID,MANAGER,OUT_DATE) values ('ORD20241113001',to_date('24/11/14','RR/MM/DD'),'출고완료','주문접수',to_date('24/11/13','RR/MM/DD'),'CP09',null,107,to_date('24/11/13','RR/MM/DD'));
Insert into ORD (ORD_CODE,DLV_REQ_DATE,ORD_STATUS,COMM,ORD_DATE,CP_CODE,USER_ID,MANAGER,OUT_DATE) values ('ORD20241113002',to_date('24/11/15','RR/MM/DD'),'계획반영',null,to_date('24/11/13','RR/MM/DD'),'CP01',null,107,null);
Insert into ORD (ORD_CODE,DLV_REQ_DATE,ORD_STATUS,COMM,ORD_DATE,CP_CODE,USER_ID,MANAGER,OUT_DATE) values ('ORD20241113003',to_date('24/11/22','RR/MM/DD'),'재고부족',null,to_date('24/11/13','RR/MM/DD'),'CP01',null,107,null);
REM INSERTING into ORD_DETAIL
SET DEFINE OFF;
Insert into ORD_DETAIL (ORD_DETAIL_CODE,UNIT_PRICE,ORD_QUANTITY,PRD_NAME,PRICE,ORD_CODE,PRD_CODE) values ('ORDDETAIL20241113337',null,100,'승주콘',null,'ORD20241113004','CON01');
Insert into ORD_DETAIL (ORD_DETAIL_CODE,UNIT_PRICE,ORD_QUANTITY,PRD_NAME,PRICE,ORD_CODE,PRD_CODE) values ('ORDDETAIL20241113338',null,100,'초코콘',null,'ORD20241113004','CON02');
Insert into ORD_DETAIL (ORD_DETAIL_CODE,UNIT_PRICE,ORD_QUANTITY,PRD_NAME,PRICE,ORD_CODE,PRD_CODE) values ('ORDDETAIL20241113331',null,100,'승주콘',null,'ORD20241113001','CON01');
Insert into ORD_DETAIL (ORD_DETAIL_CODE,UNIT_PRICE,ORD_QUANTITY,PRD_NAME,PRICE,ORD_CODE,PRD_CODE) values ('ORDDETAIL20241113332',null,100,'초코콘',null,'ORD20241113001','CON02');
Insert into ORD_DETAIL (ORD_DETAIL_CODE,UNIT_PRICE,ORD_QUANTITY,PRD_NAME,PRICE,ORD_CODE,PRD_CODE) values ('ORDDETAIL20241113333',null,100,'승주바',null,'ORD20241113002','BAR01');
Insert into ORD_DETAIL (ORD_DETAIL_CODE,UNIT_PRICE,ORD_QUANTITY,PRD_NAME,PRICE,ORD_CODE,PRD_CODE) values ('ORDDETAIL20241113336',null,100,'승주콘',null,'ORD20241113003','CON01');
Insert into ORD_DETAIL (ORD_DETAIL_CODE,UNIT_PRICE,ORD_QUANTITY,PRD_NAME,PRICE,ORD_CODE,PRD_CODE) values ('ORDDETAIL20241113334',null,100,'초코콘',null,'ORD20241113002','CON02');
Insert into ORD_DETAIL (ORD_DETAIL_CODE,UNIT_PRICE,ORD_QUANTITY,PRD_NAME,PRICE,ORD_CODE,PRD_CODE) values ('ORDDETAIL20241113335',null,100,'초코바',null,'ORD20241113003','BAR02');
REM INSERTING into PDETAIL
SET DEFINE OFF;
Insert into PDETAIL (PDETAIL_CODE,PRD_NAME,WANT,COMMAND,OUTPUT,NO,PORDER_CODE,STATUS,LINE_CODE,PRD_CODE,COMM) values ('PD202411120326','초코바',100,150,113,null,'PO20241112001','출고대기','L04','BAR02',null);
Insert into PDETAIL (PDETAIL_CODE,PRD_NAME,WANT,COMMAND,OUTPUT,NO,PORDER_CODE,STATUS,LINE_CODE,PRD_CODE,COMM) values ('PD202411130341','승주바',1,1,0,null,'PO20241113001','b1','L03','BAR01',null);
REM INSERTING into PLAN
SET DEFINE OFF;
Insert into PLAN (PLAN_CODE,START_DATE,END_DATE,MANAGER,COMM,STATUS,ORD_CODE) values ('PL20241112001',to_date('24/11/12','RR/MM/DD'),to_date('24/11/12','RR/MM/DD'),102,null,'a3','ORD20241112001');
Insert into PLAN (PLAN_CODE,START_DATE,END_DATE,MANAGER,COMM,STATUS,ORD_CODE) values ('PL20241112002',to_date('24/11/12','RR/MM/DD'),to_date('24/11/14','RR/MM/DD'),107,null,'a1','ORD20241112002');
Insert into PLAN (PLAN_CODE,START_DATE,END_DATE,MANAGER,COMM,STATUS,ORD_CODE) values ('PL20241113001',to_date('24/11/13','RR/MM/DD'),to_date('24/11/14','RR/MM/DD'),107,null,'a1','ORD20241113002');
REM INSERTING into PLAN_DETAIL
SET DEFINE OFF;
Insert into PLAN_DETAIL (PLAN_DETAIL_CODE,PRD_NAME,QUANTITY,NO,PLAN_CODE,PRD_CODE) values ('PLD20241112429','초코바',100,null,'PL20241112001','BAR02');
Insert into PLAN_DETAIL (PLAN_DETAIL_CODE,PRD_NAME,QUANTITY,NO,PLAN_CODE,PRD_CODE) values ('PLD20241113441','승주바',100,null,'PL20241113001','BAR01');
Insert into PLAN_DETAIL (PLAN_DETAIL_CODE,PRD_NAME,QUANTITY,NO,PLAN_CODE,PRD_CODE) values ('PLD20241112430','초코바',100,null,'PL20241112002','BAR02');
REM INSERTING into PORDER
SET DEFINE OFF;
Insert into PORDER (PORDER_CODE,START_DATE,PORDER_DATE,MANAGER,COMM,STATUS,PLAN_CODE) values ('PO20241112001',to_date('24/11/12','RR/MM/DD'),to_date('24/11/12','RR/MM/DD'),'102',null,'완제품품질검사완료','PL20241112001');
Insert into PORDER (PORDER_CODE,START_DATE,PORDER_DATE,MANAGER,COMM,STATUS,PLAN_CODE) values ('PO20241113001',null,to_date('24/11/13','RR/MM/DD'),'107',null,'b1',null);
REM INSERTING into PRD
SET DEFINE OFF;
Insert into PRD (PRD_CODE,COMM,PRD_NAME,DESCRIPTION,UNIT_PRICE,BOM_CODE,REGISTRATION_DATE) values ('BAR02',null,'초코바','카카오 콜라보 계절상품',2000,'B202411090002',to_date('24/11/09','RR/MM/DD'));
Insert into PRD (PRD_CODE,COMM,PRD_NAME,DESCRIPTION,UNIT_PRICE,BOM_CODE,REGISTRATION_DATE) values ('BAR01',null,'승주바','승주바 초코맛',1500,'B202411080002',to_date('24/11/08','RR/MM/DD'));
Insert into PRD (PRD_CODE,COMM,PRD_NAME,DESCRIPTION,UNIT_PRICE,BOM_CODE,REGISTRATION_DATE) values ('CON01',null,'승주콘','승주콘 우유맛',1000,'B202411080001',to_date('24/11/08','RR/MM/DD'));
Insert into PRD (PRD_CODE,COMM,PRD_NAME,DESCRIPTION,UNIT_PRICE,BOM_CODE,REGISTRATION_DATE) values ('CON02',null,'초코콘','흑백요리사 프로모션',2000,'B202411090001',to_date('24/11/09','RR/MM/DD'));
REM INSERTING into PRD_MANAGEMENT
SET DEFINE OFF;
Insert into PRD_MANAGEMENT (PRD_CODE,LOT,MD,ED,IN_QUANTITY,OUT_QUANTITY,INS_CODE,STC_QUANTITY,IN_DATE,IN_OUT_TYPE) values ('CON01','LOT20241112001',to_date('24/11/13','RR/MM/DD'),to_date('24/12/25','RR/MM/DD'),1000,100,'INS20241112001',900,to_date('24/11/13','RR/MM/DD'),null);
Insert into PRD_MANAGEMENT (PRD_CODE,LOT,MD,ED,IN_QUANTITY,OUT_QUANTITY,INS_CODE,STC_QUANTITY,IN_DATE,IN_OUT_TYPE) values ('CON02','LOT20241112002',to_date('24/11/13','RR/MM/DD'),to_date('24/12/13','RR/MM/DD'),1000,100,'INS20241112002',900,to_date('24/11/13','RR/MM/DD'),null);
Insert into PRD_MANAGEMENT (PRD_CODE,LOT,MD,ED,IN_QUANTITY,OUT_QUANTITY,INS_CODE,STC_QUANTITY,IN_DATE,IN_OUT_TYPE) values ('CON01','LOT20241112003',to_date('24/11/13','RR/MM/DD'),to_date('24/11/23','RR/MM/DD'),1000,0,'INS20241112003',1000,to_date('24/11/13','RR/MM/DD'),null);
REM INSERTING into PRD_OUT_HISTORY
SET DEFINE OFF;
Insert into PRD_OUT_HISTORY (OUT_NO,LOT,PRD_CODE,PRD_NAME,OUT_QUANTITY,OUT_DATE,CP_NAME,CP_CODE,ORD_CODE,MANAGER) values (129,'LOT20241112002','CON02',null,100,to_date('24/11/13','RR/MM/DD'),'빙그레',null,'ORD20241113001',107);
Insert into PRD_OUT_HISTORY (OUT_NO,LOT,PRD_CODE,PRD_NAME,OUT_QUANTITY,OUT_DATE,CP_NAME,CP_CODE,ORD_CODE,MANAGER) values (130,'LOT20241112001','CON01',null,100,to_date('24/11/13','RR/MM/DD'),'빙그레',null,'ORD20241113001',107);
REM INSERTING into PRESULT
SET DEFINE OFF;
Insert into PRESULT (PRESULT_CODE,PRD_CODE,START_TIME,END_TIME,OUTPUT,ERR,PROCESS_DATE,EQ_CODE,PROCESS_NAME,MANAGER,PDETAIL_CODE,LDETAIL_CODE,INPUT,STATUS,NO) values ('PR202411132541','BAR01',null,null,0,0,null,'E202411110012','배합',null,'PD202411130341','LD09',0,'b1',1);
Insert into PRESULT (PRESULT_CODE,PRD_CODE,START_TIME,END_TIME,OUTPUT,ERR,PROCESS_DATE,EQ_CODE,PROCESS_NAME,MANAGER,PDETAIL_CODE,LDETAIL_CODE,INPUT,STATUS,NO) values ('PR202411132542','BAR01',null,null,0,0,null,'E202411110014','성형',null,'PD202411130341','LD10',0,'b1',2);
Insert into PRESULT (PRESULT_CODE,PRD_CODE,START_TIME,END_TIME,OUTPUT,ERR,PROCESS_DATE,EQ_CODE,PROCESS_NAME,MANAGER,PDETAIL_CODE,LDETAIL_CODE,INPUT,STATUS,NO) values ('PR202411132543','BAR01',null,null,0,0,null,'E202411110010','냉각',null,'PD202411130341','LD11',0,'b1',3);
Insert into PRESULT (PRESULT_CODE,PRD_CODE,START_TIME,END_TIME,OUTPUT,ERR,PROCESS_DATE,EQ_CODE,PROCESS_NAME,MANAGER,PDETAIL_CODE,LDETAIL_CODE,INPUT,STATUS,NO) values ('PR202411132544','BAR01',null,null,0,0,null,'E202411110015','포장',null,'PD202411130341','LD12',0,'b1',4);
Insert into PRESULT (PRESULT_CODE,PRD_CODE,START_TIME,END_TIME,OUTPUT,ERR,PROCESS_DATE,EQ_CODE,PROCESS_NAME,MANAGER,PDETAIL_CODE,LDETAIL_CODE,INPUT,STATUS,NO) values ('PR202411122521','BAR02','15 : 30 : 35','16 : 00 : 35',129,21,to_date('24/11/12','RR/MM/DD'),'E202411110019','배합','101','PD202411120326','LD13',150,'b3',1);
Insert into PRESULT (PRESULT_CODE,PRD_CODE,START_TIME,END_TIME,OUTPUT,ERR,PROCESS_DATE,EQ_CODE,PROCESS_NAME,MANAGER,PDETAIL_CODE,LDETAIL_CODE,INPUT,STATUS,NO) values ('PR202411122522','BAR02','16 : 00 : 35','16 : 30 : 35',120,9,to_date('24/11/12','RR/MM/DD'),'E202411110021','성형','104','PD202411120326','LD14',129,'b3',2);
Insert into PRESULT (PRESULT_CODE,PRD_CODE,START_TIME,END_TIME,OUTPUT,ERR,PROCESS_DATE,EQ_CODE,PROCESS_NAME,MANAGER,PDETAIL_CODE,LDETAIL_CODE,INPUT,STATUS,NO) values ('PR202411122523','BAR02','16 : 30 : 35','17 : 00 : 35',113,7,to_date('24/11/12','RR/MM/DD'),'E202411110022','냉각','106','PD202411120326','LD15',120,'b3',3);
Insert into PRESULT (PRESULT_CODE,PRD_CODE,START_TIME,END_TIME,OUTPUT,ERR,PROCESS_DATE,EQ_CODE,PROCESS_NAME,MANAGER,PDETAIL_CODE,LDETAIL_CODE,INPUT,STATUS,NO) values ('PR202411122524','BAR02','17 : 00 : 35','17 : 30 : 35',113,0,to_date('24/11/12','RR/MM/DD'),'E202411110023','포장','105','PD202411120326','LD16',113,'b3',4);
REM INSERTING into PROCESS
SET DEFINE OFF;
Insert into PROCESS (PROCESS_NAME,DESCRIPTION,COMM,PROCESS_CODE,PROCESS_TYPE) values ('배합','배합기능',null,'PRC01','배합');
Insert into PROCESS (PROCESS_NAME,DESCRIPTION,COMM,PROCESS_CODE,PROCESS_TYPE) values ('성형','성형기능',null,'PRC02','성형');
Insert into PROCESS (PROCESS_NAME,DESCRIPTION,COMM,PROCESS_CODE,PROCESS_TYPE) values ('냉각','냉각기능',null,'PRC03','냉각');
Insert into PROCESS (PROCESS_NAME,DESCRIPTION,COMM,PROCESS_CODE,PROCESS_TYPE) values ('포장','포장기능',null,'PRC04','포장');
REM INSERTING into SJC_ROLE
SET DEFINE OFF;
Insert into SJC_ROLE (ROLE_ID,ROLE_NAME,DESCRIPTION) values (1,'ROLE_ADMIN','관리자');
Insert into SJC_ROLE (ROLE_ID,ROLE_NAME,DESCRIPTION) values (2,'ROLE_USER','사용자');
REM INSERTING into SJC_USER
SET DEFINE OFF;
Insert into SJC_USER (USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE) values (10,'admin','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','관리자','010-0000-0000','IT');
Insert into SJC_USER (USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE) values (101,'user1','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','정현우','010-0000-0000','EQ');
Insert into SJC_USER (USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE) values (102,'user2','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','조수호','010-0000-0000','PR');
Insert into SJC_USER (USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE) values (103,'user3','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','이성철','010-0000-0000','MT');
Insert into SJC_USER (USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE) values (104,'user4','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','이승주','010-0000-0000','QA');
Insert into SJC_USER (USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE) values (105,'user5','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','김동훈','010-0000-0000','IT');
Insert into SJC_USER (USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE) values (106,'user6','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','김민준','010-0000-0000','SA');
Insert into SJC_USER (USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE) values (107,'user','$2a$10$riYTvYGCqSiPCfvhJrg3WOHiQIzvpnjgl.tzIwbKkDeKSDtkT8Js.','테스터','010-123-4567','SA');
REM INSERTING into STC_HIST
SET DEFINE OFF;
REM INSERTING into TEST_EQ_LOG
SET DEFINE OFF;
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (51,null,'성형기',144.4,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (52,null,'배합기',143.7,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (53,null,'성형기',144.8,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (54,null,'배합기',141.6,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (55,null,'성형기',141.6,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (56,null,'배합기',143.4,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (57,null,'성형기',143,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (58,null,'배합기',143,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (59,null,'성형기',144.5,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (60,null,'배합기',144.2,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (61,null,'성형기',142.7,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (62,null,'배합기',142.5,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (63,null,'성형기',143.3,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (64,null,'배합기',144.5,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (65,null,'성형기',142.9,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (66,null,'배합기',142.4,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (67,null,'성형기',140.8,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (68,null,'배합기',141,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (69,null,'성형기',140.4,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (70,null,'배합기',142.6,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (71,null,'성형기',140.1,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (72,null,'배합기',143.1,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (73,null,'성형기',144.4,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (74,null,'배합기',142.2,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (75,null,'성형기',143.4,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (76,null,'배합기',142.3,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (77,null,'성형기',143.6,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (78,null,'배합기',140.2,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (79,null,'성형기',144.5,to_date('24/11/02','RR/MM/DD'));
Insert into TEST_EQ_LOG (EQ_LOG_ID,EQ_CODE,EQ_NAME,EQ_LOG_DATA,EQ_LOG_DATE) values (80,null,'배합기',140.4,to_date('24/11/02','RR/MM/DD'));
REM INSERTING into USER_HISTORY
SET DEFINE OFF;
Insert into USER_HISTORY (HISTORY_ID,USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE,CREATED_DATE) values (25,10,'admin','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','관리자','010-0000-0000','EQ',to_date('24/11/12','RR/MM/DD'));
Insert into USER_HISTORY (HISTORY_ID,USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE,CREATED_DATE) values (24,10,'admin','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','관리자','010-0000-0000','PR',to_date('24/11/10','RR/MM/DD'));
Insert into USER_HISTORY (HISTORY_ID,USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE,CREATED_DATE) values (22,10,'admin','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','관리자','010-0000-0000','MT',to_date('24/11/08','RR/MM/DD'));
Insert into USER_HISTORY (HISTORY_ID,USER_ID,LOGIN_ID,PASSWORD,USER_NAME,PHONE,DEPT_CODE,CREATED_DATE) values (23,10,'admin','$2a$10$N85TlRTXOhNRqgB6gmY0oeuQ7laV922.61LYUIfYewVlWIkfHhUtG','관리자','010-0000-0000','IT',to_date('24/11/08','RR/MM/DD'));
REM INSERTING into USER_ROLE
SET DEFINE OFF;
Insert into USER_ROLE (USER_ID,ROLE_ID) values (10,1);
Insert into USER_ROLE (USER_ID,ROLE_ID) values (101,2);
Insert into USER_ROLE (USER_ID,ROLE_ID) values (102,2);
Insert into USER_ROLE (USER_ID,ROLE_ID) values (103,2);
Insert into USER_ROLE (USER_ID,ROLE_ID) values (104,2);
Insert into USER_ROLE (USER_ID,ROLE_ID) values (105,2);
Insert into USER_ROLE (USER_ID,ROLE_ID) values (106,2);
Insert into USER_ROLE (USER_ID,ROLE_ID) values (107,2);
--------------------------------------------------------
--  DDL for Index BOM_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOM_DETAIL_PK" ON "B_DETAIL" ("B_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BOM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOM_PK" ON "BOM" ("BOM_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEFCODE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEFCODE_PK" ON "DEF" ("DEFCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_DETAIL_PK" ON "INS_DETAIL" ("INS_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_ITEM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_ITEM_PK" ON "INS_ITEM" ("INS_ITEM_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_PK" ON "INSPECTION" ("INS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_PRD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_PRD_PK" ON "INS_PRD_MAP" ("INS_ITEM_CODE", "PRD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_TYPE_PK" ON "INS_TYPE" ("INS_TYPE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "IN_PK" ON "MT_IN" ("IN_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LDETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LDETAIL_PK" ON "LDETAIL" ("LDETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LINE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LINE_PK" ON "LINE" ("LINE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MTL_OD_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MTL_OD_DETAIL_PK" ON "MTL_OD_DETAIL" ("MTL_OD_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MTL_OD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MTL_OD_PK" ON "MTL_OD" ("MTL_OD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MT_PK" ON "MT" ("MT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORD_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORD_DETAIL_PK" ON "ORD_DETAIL" ("ORD_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORD_PK" ON "ORD" ("ORD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index OUT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "OUT_PK" ON "MT_OUT" ("OUT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PDETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PDETAIL_PK" ON "PDETAIL" ("PDETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PLAN_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PLAN_DETAIL_PK" ON "PLAN_DETAIL" ("PLAN_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PLAN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PLAN_PK" ON "PLAN" ("PLAN_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PORDER_PK" ON "PORDER" ("PORDER_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRD_GOOD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PRD_GOOD_PK" ON "PRD" ("PRD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRD_MANAGEMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PRD_MANAGEMENT_PK" ON "PRD_MANAGEMENT" ("LOT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRESULT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PRESULT_PK" ON "PRESULT" ("PRESULT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PROCESS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROCESS_PK" ON "PROCESS" ("PROCESS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STC_HIST_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "STC_HIST_PK" ON "STC_HIST" ("STC_HIST_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007036
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007036" ON "EQ" ("EQ_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007044
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007044" ON "DEPARTMENT" ("DEPT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007046
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007046" ON "SJC_ROLE" ("ROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007052
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007052" ON "SJC_USER" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007053
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007053" ON "SJC_USER" ("LOGIN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007054
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007054" ON "USER_ROLE" ("ROLE_ID", "USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007140
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007140" ON "PRD_OUT_HISTORY" ("OUT_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007347
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007347" ON "INS_MAP" ("MT_CODE", "INS_ITEM_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007350
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007350" ON "USER_HISTORY" ("HISTORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007388
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007388" ON "TEST_EQ_LOG" ("EQ_LOG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BOM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOM_PK" ON "BOM" ("BOM_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BOM_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BOM_DETAIL_PK" ON "B_DETAIL" ("B_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEFCODE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "DEFCODE_PK" ON "DEF" ("DEFCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007044
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007044" ON "DEPARTMENT" ("DEPT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007036
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007036" ON "EQ" ("EQ_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_PK" ON "INSPECTION" ("INS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_DETAIL_PK" ON "INS_DETAIL" ("INS_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_ITEM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_ITEM_PK" ON "INS_ITEM" ("INS_ITEM_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007347
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007347" ON "INS_MAP" ("MT_CODE", "INS_ITEM_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_PRD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_PRD_PK" ON "INS_PRD_MAP" ("INS_ITEM_CODE", "PRD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index INS_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "INS_TYPE_PK" ON "INS_TYPE" ("INS_TYPE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LDETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LDETAIL_PK" ON "LDETAIL" ("LDETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LINE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LINE_PK" ON "LINE" ("LINE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MT_PK" ON "MT" ("MT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MTL_OD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MTL_OD_PK" ON "MTL_OD" ("MTL_OD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MTL_OD_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MTL_OD_DETAIL_PK" ON "MTL_OD_DETAIL" ("MTL_OD_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index IN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "IN_PK" ON "MT_IN" ("IN_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index OUT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "OUT_PK" ON "MT_OUT" ("OUT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORD_PK" ON "ORD" ("ORD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORD_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ORD_DETAIL_PK" ON "ORD_DETAIL" ("ORD_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PDETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PDETAIL_PK" ON "PDETAIL" ("PDETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PLAN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PLAN_PK" ON "PLAN" ("PLAN_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PLAN_DETAIL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PLAN_DETAIL_PK" ON "PLAN_DETAIL" ("PLAN_DETAIL_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PORDER_PK" ON "PORDER" ("PORDER_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRD_GOOD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PRD_GOOD_PK" ON "PRD" ("PRD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRD_MANAGEMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PRD_MANAGEMENT_PK" ON "PRD_MANAGEMENT" ("LOT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007140
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007140" ON "PRD_OUT_HISTORY" ("OUT_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRESULT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PRESULT_PK" ON "PRESULT" ("PRESULT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PROCESS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PROCESS_PK" ON "PROCESS" ("PROCESS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007046
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007046" ON "SJC_ROLE" ("ROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007052
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007052" ON "SJC_USER" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007053
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007053" ON "SJC_USER" ("LOGIN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STC_HIST_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "STC_HIST_PK" ON "STC_HIST" ("STC_HIST_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007388
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007388" ON "TEST_EQ_LOG" ("EQ_LOG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007350
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007350" ON "USER_HISTORY" ("HISTORY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007054
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYS_C007054" ON "USER_ROLE" ("ROLE_ID", "USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger PORDERS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PORDERS" 
AFTER INSERT ON PORDER
FOR EACH ROW
BEGIN

update plan
    set status = 'a2'
    where plan_code = :new.plan_code;

END;
/
ALTER TRIGGER "PORDERS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_CHCK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_CHCK" 
AFTER INSERT ON EQ_CHCK
FOR EACH ROW
BEGIN


  UPDATE EQ 
  SET USE = 'N'
  WHERE eq_code = :new.eq_code;
  

END;
/
ALTER TRIGGER "TRG_CHCK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTIN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_MTIN" 

AFTER INSERT OR UPDATE OR DELETE ON MT_IN
FOR EACH ROW
BEGIN

if (inserting)
    then
    update mt
    set current_stc = current_stc + :new.inquantity
    where mt_code = :new.mt_code;
    
elsif (updating)
    then
    update mt
    set current_stc = current_stc - :old.inquantity + :new.inquantity
    where mt_code = :old.mt_code;
    


  
end if; 


END;
/
ALTER TRIGGER "TRG_MTIN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTIN_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_MTIN_DEL" 
BEFORE DELETE ON MT_IN
FOR EACH ROW
BEGIN
      update mt
    set current_stc = current_stc - :old.inquantity
    where mt_code = :old.mt_code;
END;
/
ALTER TRIGGER "TRG_MTIN_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTOUT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_MTOUT" 

AFTER INSERT OR UPDATE OR DELETE ON MT_OUT
FOR EACH ROW
BEGIN

    

if (inserting)
    then
    update mt
    set current_stc = current_stc - :new.mt_out_count
    where mt_code = :new.mt_code;
    
elsif (updating)
    then
    update mt
    set current_stc = current_stc + :old.mt_out_count - :new.mt_out_count
    where mt_code = :new.mt_code;

end if;
END;
/
ALTER TRIGGER "TRG_MTOUT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTOUT_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_MTOUT_DEL" 
BEFORE DELETE ON MT_OUT
FOR EACH ROW
BEGIN

    
update mt
    set current_stc = current_stc + :old.mt_out_count
    where mt_code = :old.mt_code;
  
 

END;
/
ALTER TRIGGER "TRG_MTOUT_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_OD_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_OD_DEL" 
    AFTER DELETE ON ord
    FOR EACH ROW
    BEGIN
        DELETE FROM ord_detail
        WHERE ord_code = :old.ord_code;
    END;

/
ALTER TRIGGER "TRG_OD_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_PLAN_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_PLAN_DEL" 
BEFORE DELETE ON PLAN 
FOR EACH ROW
BEGIN
    update ord
    set ord_status = '재고부족'
    where ord_code = :old.ord_code;
END;
/
ALTER TRIGGER "TRG_PLAN_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_PLAN_ORD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_PLAN_ORD" 
AFTER INSERT ON PLAN 
FOR EACH ROW
BEGIN
  

    update ord
    set ord_status = '계획반영'
    where ord_code = :new.ord_code;
    

END;
/
ALTER TRIGGER "TRG_PLAN_ORD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_USEOPERATING
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_USEOPERATING" 
AFTER UPDATE ON EQ_CHCK
FOR EACH ROW
BEGIN


  UPDATE EQ
  SET USE = 'Y'
  WHERE eq_code = :new.eq_code;
END;
/
ALTER TRIGGER "TRG_USEOPERATING" ENABLE;
--------------------------------------------------------
--  DDL for Trigger USER_HISTORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "USER_HISTORY" 
AFTER UPDATE ON sjc_user
FOR EACH ROW
BEGIN
    INSERT INTO user_history -- 사용자 정보 변경 이력 
    (
        history_id
        ,user_id
        ,login_id
        ,password
        ,user_name
        ,phone
        ,dept_code
    )
    VALUES
    (
        seq_user_history.nextval
        ,:old.user_id
        ,:old.login_id
        ,:old.password
        ,:old.user_name
        ,:old.phone
        ,:old.dept_code
    );
END;

/
ALTER TRIGGER "USER_HISTORY" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_CHCK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_CHCK" 
AFTER INSERT ON EQ_CHCK
FOR EACH ROW
BEGIN


  UPDATE EQ 
  SET USE = 'N'
  WHERE eq_code = :new.eq_code;
  

END;
/
ALTER TRIGGER "TRG_CHCK" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_USEOPERATING
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_USEOPERATING" 
AFTER UPDATE ON EQ_CHCK
FOR EACH ROW
BEGIN


  UPDATE EQ
  SET USE = 'Y'
  WHERE eq_code = :new.eq_code;
END;
/
ALTER TRIGGER "TRG_USEOPERATING" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTIN
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_MTIN" 

AFTER INSERT OR UPDATE OR DELETE ON MT_IN
FOR EACH ROW
BEGIN

if (inserting)
    then
    update mt
    set current_stc = current_stc + :new.inquantity
    where mt_code = :new.mt_code;
    
elsif (updating)
    then
    update mt
    set current_stc = current_stc - :old.inquantity + :new.inquantity
    where mt_code = :old.mt_code;
    


  
end if; 


END;
/
ALTER TRIGGER "TRG_MTIN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTIN_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_MTIN_DEL" 
BEFORE DELETE ON MT_IN
FOR EACH ROW
BEGIN
      update mt
    set current_stc = current_stc - :old.inquantity
    where mt_code = :old.mt_code;
END;
/
ALTER TRIGGER "TRG_MTIN_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTOUT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_MTOUT" 

AFTER INSERT OR UPDATE OR DELETE ON MT_OUT
FOR EACH ROW
BEGIN

    

if (inserting)
    then
    update mt
    set current_stc = current_stc - :new.mt_out_count
    where mt_code = :new.mt_code;
    
elsif (updating)
    then
    update mt
    set current_stc = current_stc + :old.mt_out_count - :new.mt_out_count
    where mt_code = :new.mt_code;

end if;
END;
/
ALTER TRIGGER "TRG_MTOUT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_MTOUT_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_MTOUT_DEL" 
BEFORE DELETE ON MT_OUT
FOR EACH ROW
BEGIN

    
update mt
    set current_stc = current_stc + :old.mt_out_count
    where mt_code = :old.mt_code;
  
 

END;
/
ALTER TRIGGER "TRG_MTOUT_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_OD_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_OD_DEL" 
    AFTER DELETE ON ord
    FOR EACH ROW
    BEGIN
        DELETE FROM ord_detail
        WHERE ord_code = :old.ord_code;
    END;

/
ALTER TRIGGER "TRG_OD_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_PLAN_ORD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_PLAN_ORD" 
AFTER INSERT ON PLAN 
FOR EACH ROW
BEGIN
  

    update ord
    set ord_status = '계획반영'
    where ord_code = :new.ord_code;
    

END;
/
ALTER TRIGGER "TRG_PLAN_ORD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_PLAN_DEL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRG_PLAN_DEL" 
BEFORE DELETE ON PLAN 
FOR EACH ROW
BEGIN
    update ord
    set ord_status = '재고부족'
    where ord_code = :old.ord_code;
END;
/
ALTER TRIGGER "TRG_PLAN_DEL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PORDERS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PORDERS" 
AFTER INSERT ON PORDER
FOR EACH ROW
BEGIN

update plan
    set status = 'a2'
    where plan_code = :new.plan_code;

END;
/
ALTER TRIGGER "PORDERS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger USER_HISTORY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "USER_HISTORY" 
AFTER UPDATE ON sjc_user
FOR EACH ROW
BEGIN
    INSERT INTO user_history -- 사용자 정보 변경 이력 
    (
        history_id
        ,user_id
        ,login_id
        ,password
        ,user_name
        ,phone
        ,dept_code
    )
    VALUES
    (
        seq_user_history.nextval
        ,:old.user_id
        ,:old.login_id
        ,:old.password
        ,:old.user_name
        ,:old.phone
        ,:old.dept_code
    );
END;

/
ALTER TRIGGER "USER_HISTORY" ENABLE;
--------------------------------------------------------
--  DDL for Procedure DELETE_USERS_PROCEDURE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "DELETE_USERS_PROCEDURE" (
    p_user_ids IN VARCHAR2
)
AS
    TYPE varchar2_array_t IS TABLE OF VARCHAR2(100) INDEX BY PLS_INTEGER;
    v_user_ids      varchar2_array_t;
    v_index         PLS_INTEGER := 1;
    v_temp_user_ids VARCHAR2(4000);
    v_start_index   PLS_INTEGER := 1;
    v_comma_index   PLS_INTEGER;
BEGIN
    v_temp_user_ids := p_user_ids;

    LOOP
        v_comma_index := INSTR(v_temp_user_ids, ',', v_start_index);

        IF v_comma_index > 0 THEN
            v_user_ids(v_index) := SUBSTR(v_temp_user_ids, v_start_index, v_comma_index - v_start_index);
            v_index := v_index + 1;
            v_start_index := v_comma_index + 1;
        ELSE
            v_user_ids(v_index) := SUBSTR(v_temp_user_ids, v_start_index);
            EXIT;
        END IF;
    END LOOP;

    FORALL i IN 1..v_user_ids.COUNT
        DELETE FROM user_role WHERE user_id = v_user_ids(i);

    FORALL i IN 1..v_user_ids.COUNT
        DELETE FROM sjc_user WHERE user_id = v_user_ids(i);

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END delete_users_procedure;

/
--------------------------------------------------------
--  DDL for Procedure OUTMT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "OUTMT" 
(    
    prd_cd prd.prd_code%type,
    accounts PLS_INTEGER,
    v_line_code line.line_code%type,
    pd_cd pdetail.pdetail_code%type,
    res OUT VARCHAR2
)
IS
    -- 커서 선언 
    -- 자재코드와 필요수 뽑는 커서
    CURSOR c_need IS
        select d.mt_code,
        d.quantity_required * accounts
        from prd p
        join bom b 
        on p.prd_code = b.prd_code
        join b_detail d 
        on b.bom_code = d.bom_code
        where p.prd_code = prd_cd;
        
    -- 자재코드를 넣으면 해당 자재코드에 맞으면서 재고가 존재하는 가장 작은 LOT_NO를 뽑는 커서
    CURSOR c_find_lot(p_mt_code mt_in.mt_code%type) IS
        select i.lot_no,
                i.inquantity - NVL(SUM(o.mt_out_count),0)
        from mt_in i
        left join mt_out o
        on i.lot_no = o.lot_no
        where i.mt_code = p_mt_code
        group by i.lot_no,
                i.inquantity
        HAVING i.inquantity - NVL(SUM(o.mt_out_count),0) > 0
        order by lot_no;
        
    
    -- 자재 총 수량이 부족한지 확인하는 커서
    CURSOR c_suc(p_mt_code mt.mt_code%type) IS
        select current_stc
        from mt
        where mt_code = p_mt_code;
        
        
        
    -- 변수 선언
    v_mt_code mt.mt_code%TYPE;                   -- 필요 자재코드
    v_account PLS_INTEGER;                      -- lot가 가진 수량
    v_need PLS_INTEGER;                           -- 필요 자재수량
    v_lot_no mt_in.lot_no%TYPE;                    -- 조건 만족 lot_no
    v_all PLS_INTEGER;                          -- 자재 총 개수
    
    -- 예외 선언
    not_enough_mt EXCEPTION;
    
 
BEGIN 
    
    -- 필요자재 확인 커서 실행
    OPEN c_need;
    
    
     LOOP
        FETCH c_need INTO v_mt_code, v_need;
        
        EXIT WHEN c_need%NOTFOUND;
        
        
        -- 자재 총 수량 파악
        select current_stc
        into v_all
        from mt
        where mt_code = v_mt_code;
        
        
        -- 자재 총 수량과 필요수량 비교    
        IF v_all < v_need THEN
            RAISE not_enough_mt;
        END IF;
        
        
        
    END LOOP;
        DBMS_OUTPUT.PUT_LINE('몬다이 나시');
    CLOSE c_need;
    
    
    OPEN c_need;
    -- 커서 열기
    LOOP
                       DBMS_OUTPUT.PUT_LINE('진입');
        FETCH c_need INTO v_mt_code, v_need;
        
                       DBMS_OUTPUT.PUT_LINE(v_need);
        
        EXIT WHEN c_need%NOTFOUND;
        
        
        
            -- 필요 자재의 사용가능한 가장 작은 lot 선별
            OPEN c_find_lot(v_mt_code);
            
            LOOP
                
                FETCH c_find_lot INTO v_lot_no, v_account;
                
                               DBMS_OUTPUT.PUT_LINE(v_lot_no);
                
                
                -- lot의 수량이 필요자재수량 이하일 경우 출고 숫자는 lot수량 대입 후 필요자재수량에서 lot수량 마이너스
                if v_need >= v_account then
                
                    insert into mt_out(out_date,
                                        mt_out_count,
                                        output_target,
                                        out_code,
                                        lot_no,
                                        mt_code,
                                        user_id,
                                        pdetail_code)
                    values             (sysdate,
                                        --(to_char(sysdate, 'yyyy/MM/dd'),
                                        v_account,
                                        v_line_code,
                                        CREATE_OTSEQ(),
                                        v_lot_no,
                                        v_mt_code,
                                        1,
                                        pd_cd);
                    
                    v_need := v_need - v_account;
                
                else 
                -- lot의 수량이 필요자재수량 초과일 경우 출고 숫자는 필요자재 수량 대입 후 필요자재수량 = 0
                    insert into mt_out(out_date,
                                        mt_out_count,
                                        output_target,
                                        out_code,
                                        lot_no,
                                        mt_code,
                                        user_id,
                                        pdetail_code)
                    values             (sysdate,   
                                    --(to_char(sysdate, 'yyyy/MM/dd'),
                                        v_need,
                                        v_line_code,
                                        CREATE_OTSEQ(),
                                        v_lot_no,
                                        v_mt_code,
                                        1,
                                        pd_cd);
                                        
                    v_need := 0;
                    
                end if;
                
 
                                   DBMS_OUTPUT.PUT_LINE(v_lot_no||'      '||v_account||'           '||v_need);
                
                EXIT WHEN v_need = 0; 
                
                

                
                
            
            END LOOP;
            
            CLOSE c_find_lot;
             
        
        
    END LOOP;
    
    res := '생산을 시작합니다.';
    
    CLOSE c_need;
    
    


EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No available materials for the given code.');
    WHEN not_enough_mt THEN
        res := '자재가 부족합니다.';
        DBMS_OUTPUT.PUT_LINE('Not enough Material');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);

END;

/
--------------------------------------------------------
--  DDL for Procedure PSTART
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "PSTART" 
(
    pd_code pdetail.pdetail_code%type,
    ipt presult.input%type 
    , ldmng ARRLDMANAGER
)
AS 
    CURSOR c_presult IS
        select presult_code
        from presult
        where pdetail_code = pd_code
        order by no;
        
    CURSOR c_orderstatus(p_orcode porder.porder_code%type) IS
        select status
        from pdetail
        where porder_code = p_orcode;
        
        
        
    CURSOR c_checkprd(p_plcode plan.plan_code%type) IS
        select prd_code, quantity
        from plan_detail
        where plan_code = p_plcode;
        
        
    CURSOR c_ordercode(p_plcode plan.plan_code%type) IS
        select porder_code
        from porder
        where plan_code = p_plcode;
        

    
    
    
    v_pr_code presult.presult_code%type;        -- pDetailCode에 맞는 생산공정실적 코드
    v_pr_no presult.no%type;                    -- 해당 실적코드의 순서
    v_pr_in presult.input%type;                 -- 현재 투입량 
    v_random PLS_INTEGER;                       -- 랜덤 수
    v_po_code porder.porder_code%type;          -- 이번 생산지시 코드
    v_nextin presult.output%type;               -- 다음 공정 투입량을 위한 이번 생산량
    v_pdstatus pdetail.status%type;             -- 생산지시 상태변화를 위한 생산지시상세 상태
    v_ocnt PLS_INTEGER;                         -- 생산지시 상태변화를 위해 생산지시상세 카운터
    v_dcnt PLS_INTEGER := 0;                         -- if마다 수량 증가해서 체크용
    
    
    v_plan_code plan.plan_code%type;            -- 연결된 생산계획 코드
    v_plprd prd.prd_code%type;                  -- 생산계획 상세에서 추출할 완제품코드
    v_qtt PLS_INTEGER;                          -- v_plprd의 수량
    v_sumqtt PLS_INTEGER;                       -- 생산계획에서 현재 만들어진 수량
    v_pdcnt PLS_INTEGER;
    v_cnt PLS_INTEGER := 0;
    v_now date;
    v_line line.line_code%type;                 -- 지시 라인 
    v_ord ord.ord_code%type;
    v_before_random PLS_INTEGER;       
    v_ordercode porder.porder_code%type;        -- loop용 오더코드
    v_fullqtt PLS_INTEGER := 0;

BEGIN

    OPEN c_presult;
    
    LOOP   
        
        -- pdetail code에 맞는 presult_code 찾기 
        FETCH c_presult INTO v_pr_code;
        
        if c_presult%NOTFOUND then 
        
        update pdetail
        set output = v_nextin
        where pdetail_code = pd_code;
        
        
        EXIT WHEN c_presult%NOTFOUND;
        
        end if;
        
        
        -- 이번 공정실적의 숫자
        
        select no, input
        into v_pr_no,
            v_pr_in
        from presult
        where presult_code = v_pr_code;
        
        SELECT ROUND(DBMS_RANDOM.VALUE(0, 8))
        into v_random
        FROM DUAL;
        
        -- 첫번 째 공정일 경우 
        IF v_pr_no = 1 then
            
            -- 첫번 째 공정이 처음 시작일 경우 = 투입량 0
            if v_pr_in = 0 then               
                
                
                update presult
                set status = 'b2',
                    input = ipt,
                    start_time = to_char(sysdate, 'HH24 : MI : SS'),
                    process_date = sysdate,
                    manager = ldmng(1)
                where presult_code = v_pr_code;
                
                v_now := sysdate;
                v_pr_in := ipt;
                
                update pdetail
                set status = 'b2'
                where pdetail_code = pd_code;
                
                select porder_code
                into v_po_code
                from pdetail
                where pdetail_code = pd_code;
                
                update porder
                set status = 'b2'
                where porder_code = v_po_code;
                
                v_now := v_now +  30/(24*60); 
                -- 80%확률로 불량량0 생산량10
                
                
                update presult
                set output = v_pr_in - ROUND(v_pr_in*(v_random/50)),
                    err = ROUND(v_pr_in*(v_random/50))
                where presult_code = v_pr_code;
                
                update presult
                set status = 'b3',
                    
                    end_time = to_char(v_now, 'HH24 : MI : SS')
                where presult_code = v_pr_code;
                
                update pdetail
                set status = 'b3'
                where pdetail_code = pd_code;
                
                
                select output
                into v_nextin
                from presult
                where presult_code = v_pr_code;
                

            end if;  
        
        else 
        
            update presult
                set status = 'b2',
                    input = v_nextin,
                    start_time = to_char(v_now, 'HH24 : MI : SS'),
                    process_date = sysdate,
                     manager = ldmng(v_pr_no)
                where presult_code = v_pr_code;
                
                
                update pdetail
                set status = 'b2'
                where pdetail_code = pd_code;

                v_now := v_now +  30/(24*60); 
                -- 80%확률로 불량량0 생산량10

                
                update presult
                set output = v_nextin - ROUND((v_nextin*(v_random/100))),
                    err = ROUND(v_nextin*(v_random/100))
                where presult_code = v_pr_code;
                
                
                -- 이번 생산 공정 상태 완료로 변경, 완료시간, 공정날짜 생성
                update presult
                set status = 'b3',
                    end_time = to_char(v_now, 'HH24 : MI : SS')
                where presult_code = v_pr_code;
                

                
                
                select output
                into v_nextin
                from presult
                where presult_code = v_pr_code;
        

        end if;
       
    END LOOP;
    
    CLOSE c_presult;
    
    
    
    
    
    
    
    
    
    
    
    -- 싹 다 끝나고 생산지시상세 완료로 업데이트 
    update pdetail
    set status = 'b3'
    where pdetail_code = pd_code;
    
    select line_code
    into v_line
    from pdetail
    where pdetail_code = pd_code;
    
    update line
    set use = 'Y'
    where line_code = v_line;
    
    -- porder에 맞는 pdetail 개수 찾기 
    select count(pdetail_code)
    into v_ocnt
    from pdetail
    where porder_code = v_po_code;
    
    
    -- 생산 지시 상세가 싹 완료가 되면 생산 지시도 완료 상태로 변경
    OPEN c_orderstatus(v_po_code);
    
    LOOP
        
        FETCH c_orderstatus INTO v_pdstatus;
        
        
        EXIT WHEN c_orderstatus%NOTFOUND;
        
        
        if v_pdstatus = 'b3' then

            v_dcnt := v_dcnt + 1;
        
        -- 완료상태인 생산지시상세의 갯수가 porder의 자식인 생산지시상세의 수와 같을 경우
                if v_ocnt = v_dcnt then 
                
                update porder 
                set status = 'b3',
                    start_date = sysdate
                where porder_code = v_po_code;
                
                
                select plan_code
                into v_plan_code
                from porder
                where porder_code = v_po_code;
                
                select count(plan_detail_code)
                into v_pdcnt    -- 계획 상세임
                from plan_detail
                where plan_code = v_plan_code;
                
                
                -- 생산 계획 상세의 제품 찾기 커서 오픈
                OPEN c_checkprd(v_plan_code);
                
                
                LOOP
                
                FETCH c_checkprd INTO v_plprd, v_qtt;
                
                EXIT WHEN c_checkprd%NOTFOUND;
                
                    v_fullqtt := 0;
                
                    OPEN c_ordercode(v_plan_code);
                    
                    
                    LOOP 
                    
                    FETCH c_ordercode INTO v_ordercode;
                    
                    EXIT WHEN c_ordercode%NOTFOUND;
                
                    select sum(output)
                    into v_sumqtt
                    from pdetail
                    where prd_code = v_plprd 
                    AND porder_code = v_ordercode;
                    
                    v_fullqtt := v_fullqtt + v_sumqtt;
                    
                    
                    if v_fullqtt >= v_qtt then
                    
                    v_cnt := v_cnt + 1;
                    
                    
                        if v_pdcnt = v_cnt then
                        
                            update plan 
                            set status = 'a3'
                            where plan_code = v_plan_code;
                            
                            select ord_code
                            into v_ord
                            from plan
                            where plan_code = v_plan_code;
                            
                            update ord
                            set ord_status = '주문접수'
                            where ord_code = v_ord;
                        
                        end if;
                    
                    end if;
                    
                    END LOOP;
                    
                    
                    CLOSE c_ordercode;
                
                
                END LOOP;
                
                
                
                CLOSE c_checkprd;
                

                end if;
                
        
        end if;
    
    END LOOP;
    
    CLOSE c_orderstatus;
    
    

END PSTART;

/
--------------------------------------------------------
--  DDL for Function CREATE_OTSEQ
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "CREATE_OTSEQ" RETURN VARCHAR2 AS 
v_seq varchar2(30);
BEGIN
SELECT  ('OT'||to_char(sysdate, 'yyyyMMdd')||LPAD(pr_seq.nextVal,4,0))
into v_seq
from dual;
  RETURN v_seq;
END CREATE_OTSEQ;

/
--------------------------------------------------------
--  DDL for Function CREATE_PSEQ
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "CREATE_PSEQ" RETURN VARCHAR2 AS 
v_seq varchar2(30);
BEGIN
SELECT  ('PR'||to_char(sysdate, 'yyyyMMdd')||LPAD(pr_seq.nextVal,4,0))
into v_seq
from dual;
  RETURN v_seq;
END CREATE_PSEQ;

/
--------------------------------------------------------
--  DDL for Function F_CODE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "F_CODE" (
    p_table     VARCHAR2,   -- 테이블명
    p_column    VARCHAR2,   -- 칼럼명    
    p_prefix    VARCHAR2    -- 접두어
)
RETURN VARCHAR2
IS
    v_sql           VARCHAR2(4000);
    v_code          VARCHAR2(40);
    v_prefix_len    NUMBER;
BEGIN
    v_prefix_len := LENGTH(p_prefix);

    v_sql := '
        SELECT
            CASE
                WHEN MAX(SUBSTR(' || p_column || ', ' || (v_prefix_len + 1) || ', 8)) = TO_CHAR(SYSDATE, ''yyyyMMdd'') 
                THEN (''' || UPPER(p_prefix) || ''' || TO_CHAR(MAX(SUBSTR(' || p_column || ', ' || (v_prefix_len + 1) || ', 12)) + 1))
                ELSE (''' || UPPER(p_prefix) || ''' || TO_CHAR(SYSDATE, ''yyyyMMdd'') || TO_CHAR(LPAD(1, 4, 0)) )
            END
        FROM ' || UPPER(p_table);

    EXECUTE IMMEDIATE v_sql INTO v_code;
    RETURN  v_code;
END f_code;


/
--------------------------------------------------------
--  Constraints for Table BOM
--------------------------------------------------------

  ALTER TABLE "BOM" ADD CONSTRAINT "XPKBOM" PRIMARY KEY ("BOM_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "BOM" MODIFY ("BOM_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table B_DETAIL
--------------------------------------------------------

  ALTER TABLE "B_DETAIL" ADD CONSTRAINT "XPKBOM상세" PRIMARY KEY ("B_DETAIL_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "B_DETAIL" MODIFY ("B_DETAIL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CP
--------------------------------------------------------

  ALTER TABLE "CP" MODIFY ("CP_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEF
--------------------------------------------------------

  ALTER TABLE "DEF" ADD CONSTRAINT "XPK불량" PRIMARY KEY ("DEFCODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "DEF" MODIFY ("DEFREASON" NOT NULL ENABLE);
  ALTER TABLE "DEF" MODIFY ("DEFCODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEPARTMENT
--------------------------------------------------------

  ALTER TABLE "DEPARTMENT" ADD PRIMARY KEY ("DEPT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "DEPARTMENT" MODIFY ("DEPT_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EQ
--------------------------------------------------------

  ALTER TABLE "EQ" ADD PRIMARY KEY ("EQ_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EQ_CHCK
--------------------------------------------------------

  ALTER TABLE "EQ_CHCK" MODIFY ("EQ_CODE" NOT NULL ENABLE);
  ALTER TABLE "EQ_CHCK" MODIFY ("EQ_CHCK_OPCD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INSPECTION
--------------------------------------------------------

  ALTER TABLE "INSPECTION" ADD CONSTRAINT "XPK품질검사" PRIMARY KEY ("INS_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "INSPECTION" MODIFY ("INS_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INS_DETAIL
--------------------------------------------------------

  ALTER TABLE "INS_DETAIL" ADD CONSTRAINT "XPK품질검사_상세" PRIMARY KEY ("INS_DETAIL_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "INS_DETAIL" MODIFY ("INS_DETAIL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INS_ITEM
--------------------------------------------------------

  ALTER TABLE "INS_ITEM" ADD CONSTRAINT "XPK품질검사_항목" PRIMARY KEY ("INS_ITEM_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "INS_ITEM" MODIFY ("INS_ITEM_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INS_MAP
--------------------------------------------------------

  ALTER TABLE "INS_MAP" ADD PRIMARY KEY ("MT_CODE", "INS_ITEM_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "INS_MAP" MODIFY ("INS_ITEM_CODE" NOT NULL ENABLE);
  ALTER TABLE "INS_MAP" MODIFY ("MT_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INS_PRD_MAP
--------------------------------------------------------

  ALTER TABLE "INS_PRD_MAP" ADD CONSTRAINT "INS_PRD_PK" PRIMARY KEY ("INS_ITEM_CODE", "PRD_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table INS_TYPE
--------------------------------------------------------

  ALTER TABLE "INS_TYPE" ADD CONSTRAINT "XPK품질검사_유형" PRIMARY KEY ("INS_TYPE_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "INS_TYPE" MODIFY ("INS_TYPE_NAME" NOT NULL ENABLE);
  ALTER TABLE "INS_TYPE" MODIFY ("INS_TYPE_CODE" NOT NULL ENABLE);
  ALTER TABLE "INS_TYPE" MODIFY ("INS_ITEM_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LDETAIL
--------------------------------------------------------

  ALTER TABLE "LDETAIL" ADD CONSTRAINT "XPK라인상세정보" PRIMARY KEY ("LDETAIL_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LDETAIL" MODIFY ("LDETAIL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LINE
--------------------------------------------------------

  ALTER TABLE "LINE" ADD CONSTRAINT "XPK라인" PRIMARY KEY ("LINE_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LINE" MODIFY ("LINE_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MT
--------------------------------------------------------

  ALTER TABLE "MT" ADD CONSTRAINT "XPK자재" PRIMARY KEY ("MT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MT" MODIFY ("MT_NAME" NOT NULL ENABLE);
  ALTER TABLE "MT" MODIFY ("MT_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MTL_OD
--------------------------------------------------------

  ALTER TABLE "MTL_OD" ADD CONSTRAINT "XPK자재발주" PRIMARY KEY ("MTL_OD_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MTL_OD" MODIFY ("MTL_OD_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MTL_OD_DETAIL
--------------------------------------------------------

  ALTER TABLE "MTL_OD_DETAIL" ADD CONSTRAINT "XPK자재발주_상세" PRIMARY KEY ("MTL_OD_DETAIL_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MTL_OD_DETAIL" MODIFY ("MTL_OD_DETAIL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MT_IN
--------------------------------------------------------

  ALTER TABLE "MT_IN" ADD CONSTRAINT "XPK자재입고" PRIMARY KEY ("IN_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MT_IN" MODIFY ("IN_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MT_OUT
--------------------------------------------------------

  ALTER TABLE "MT_OUT" ADD CONSTRAINT "XPK자재_출고" PRIMARY KEY ("OUT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MT_OUT" MODIFY ("OUT_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORD
--------------------------------------------------------

  ALTER TABLE "ORD" ADD CONSTRAINT "XPK주문" PRIMARY KEY ("ORD_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ORD" MODIFY ("ORD_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORD_DETAIL
--------------------------------------------------------

  ALTER TABLE "ORD_DETAIL" ADD CONSTRAINT "XPK주문_상세" PRIMARY KEY ("ORD_DETAIL_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ORD_DETAIL" MODIFY ("ORD_DETAIL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PDETAIL
--------------------------------------------------------

  ALTER TABLE "PDETAIL" ADD CONSTRAINT "XPK생산지시상세" PRIMARY KEY ("PDETAIL_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PDETAIL" MODIFY ("PDETAIL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN
--------------------------------------------------------

  ALTER TABLE "PLAN" ADD CONSTRAINT "XPK생산계획" PRIMARY KEY ("PLAN_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PLAN" MODIFY ("PLAN_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLAN_DETAIL
--------------------------------------------------------

  ALTER TABLE "PLAN_DETAIL" ADD CONSTRAINT "XPK생산계획_상세" PRIMARY KEY ("PLAN_DETAIL_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PLAN_DETAIL" MODIFY ("PLAN_DETAIL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PORDER
--------------------------------------------------------

  ALTER TABLE "PORDER" ADD CONSTRAINT "XPK생산지시" PRIMARY KEY ("PORDER_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PORDER" MODIFY ("PORDER_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRD
--------------------------------------------------------

  ALTER TABLE "PRD" ADD CONSTRAINT "XPK제품" PRIMARY KEY ("PRD_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PRD" MODIFY ("PRD_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRD_MANAGEMENT
--------------------------------------------------------

  ALTER TABLE "PRD_MANAGEMENT" MODIFY ("PRD_CODE" NOT NULL ENABLE);
  ALTER TABLE "PRD_MANAGEMENT" ADD CONSTRAINT "PRD_MANAGEMENT_PK" PRIMARY KEY ("LOT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PRD_MANAGEMENT" MODIFY ("LOT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRD_OUT_HISTORY
--------------------------------------------------------

  ALTER TABLE "PRD_OUT_HISTORY" ADD PRIMARY KEY ("OUT_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRESULT
--------------------------------------------------------

  ALTER TABLE "PRESULT" ADD CONSTRAINT "XPK생산공정실적" PRIMARY KEY ("PRESULT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PRESULT" MODIFY ("PRESULT_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PROCESS
--------------------------------------------------------

  ALTER TABLE "PROCESS" ADD CONSTRAINT "XPK공정" PRIMARY KEY ("PROCESS_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PROCESS" MODIFY ("PROCESS_CODE" NOT NULL ENABLE);
  ALTER TABLE "PROCESS" MODIFY ("PROCESS_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SJC_ROLE
--------------------------------------------------------

  ALTER TABLE "SJC_ROLE" ADD PRIMARY KEY ("ROLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "SJC_ROLE" MODIFY ("ROLE_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SJC_USER
--------------------------------------------------------

  ALTER TABLE "SJC_USER" ADD UNIQUE ("LOGIN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "SJC_USER" ADD PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "SJC_USER" MODIFY ("DEPT_CODE" NOT NULL ENABLE);
  ALTER TABLE "SJC_USER" MODIFY ("PHONE" NOT NULL ENABLE);
  ALTER TABLE "SJC_USER" MODIFY ("USER_NAME" NOT NULL ENABLE);
  ALTER TABLE "SJC_USER" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "SJC_USER" MODIFY ("LOGIN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STC_HIST
--------------------------------------------------------

  ALTER TABLE "STC_HIST" ADD CONSTRAINT "XPK재고이력" PRIMARY KEY ("STC_HIST_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "STC_HIST" MODIFY ("STC_HIST_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TEST_EQ_LOG
--------------------------------------------------------

  ALTER TABLE "TEST_EQ_LOG" ADD PRIMARY KEY ("EQ_LOG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USER_HISTORY
--------------------------------------------------------

  ALTER TABLE "USER_HISTORY" ADD PRIMARY KEY ("HISTORY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USER_ROLE
--------------------------------------------------------

  ALTER TABLE "USER_ROLE" ADD PRIMARY KEY ("ROLE_ID", "USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
